{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "70522b52-aa3e-484c-a493-a7a13f2d34e8",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/past/builtins/misc.py:45: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses\n",
      "  from imp import reload\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import string\n",
    "import re\n",
    "import os\n",
    "\n",
    "from nltk.corpus import stopwords\n",
    "from nltk.tokenize import word_tokenize\n",
    "from nltk.tokenize.treebank import TreebankWordDetokenizer\n",
    "from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\n",
    "\n",
    "from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import mysql.connector\n",
    "\n",
    "import gensim\n",
    "from gensim.utils import simple_preprocess\n",
    "import gensim.corpora as corpora\n",
    "\n",
    "import pyLDAvis\n",
    "import pickle \n",
    "import pyLDAvis.gensim_models as gensimvis\n",
    "\n",
    "from pprint import pprint\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f93ad66e-4a7a-4b60-8246-b4e14903eb0b",
   "metadata": {},
   "source": [
    "# Load the data and write the data into the database"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "742fb004-aef3-4768-aed1-1fc6c848091d",
   "metadata": {},
   "source": [
    "## check the twitter data and write it into the database"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "cb5c307b-98fd-4056-9644-d3e2e5c988e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load Twitter data and remove rows which contain missing values\n",
    "data = pd.read_csv(\"./data/ChatGPT.csv\")\n",
    "data = data.dropna()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "id": "d97ac6b0-e2f6-4177-828d-0235f6bffe69",
   "metadata": {},
   "outputs": [],
   "source": [
    "# convert retweet and like from type float to type int\n",
    "data[\"retweet_count\"] = data[\"retweet_count\"].apply(lambda x: int(x))\n",
    "data[\"like_count\"] = data[\"like_count\"].apply(lambda x: int(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "3f092a8d-c9cf-407b-9198-022d3c8aaa45",
   "metadata": {},
   "outputs": [],
   "source": [
    "# establish connection to the mysql database\n",
    "mydb = mysql.connector.connect(\n",
    "  host=\"localhost\",\n",
    "  user=\"root\",\n",
    "  password=\"Digicat_2022!\",\n",
    "  database=\"territory\"\n",
    ")\n",
    "mycursor = mydb.cursor()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "c37ca4e8-acc0-4333-b049-d2f9166cf422",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create Twitter database\n",
    "mycursor.execute(\"DROP TABLE IF EXISTS Twitter;\")\n",
    "mycursor.execute(\"CREATE TABLE Twitter (id VARCHAR(30), date DATETIME,tweet VARCHAR(1000), username VARCHAR(255) ,like_count INT,retweet_count INT)\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "b36feba0-df14-4627-b608-792b25d38b04",
   "metadata": {},
   "outputs": [],
   "source": [
    "# insert data into database\n",
    "sql = \"INSERT INTO Twitter (id, date,tweet,username,like_count,retweet_count) VALUES (%s, %s, %s, %s, %s, %s)\"\n",
    "\n",
    "for index, row in data.iterrows():\n",
    "    ID = row[\"id\"]\n",
    "    date = row[\"date\"]\n",
    "    tweet = row[\"content\"]\n",
    "    username = row[\"username\"]\n",
    "    like_count = row[\"like_count\"]\n",
    "    retweet_count = row[\"retweet_count\"]\n",
    "    val = (ID, date,tweet,username,like_count,retweet_count)\n",
    "    mycursor.execute(sql, val)\n",
    "\n",
    "mydb.commit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b40d9811-837b-401f-ad29-8b2250711f7e",
   "metadata": {},
   "source": [
    "## check the Google Trends data and write it into the database"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 244,
   "id": "c7c8bc6c-ef5f-46f4-a3c3-14669a79db9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "googleTrendsTimeline = pd.read_csv(\"./data/multiTimeline.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 247,
   "id": "ef45de9f-b3f3-4e1b-883a-bfd3ae8c49ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2023-01-01</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2023-01-02</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2023-01-03</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2023-01-04</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2023-01-05</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          day  score\n",
       "0  2023-01-01     11\n",
       "1  2023-01-02     15\n",
       "2  2023-01-03     18\n",
       "3  2023-01-04     19\n",
       "4  2023-01-05     23"
      ]
     },
     "execution_count": 247,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "googleTrendsTimeline.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 248,
   "id": "72ae4b2a-3197-4cd4-ae82-d85598d176c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create Twitter database\n",
    "mycursor.execute(\"DROP TABLE IF EXISTS googleTrendsTimeline;\")\n",
    "mycursor.execute(\"CREATE TABLE googleTrendsTimeline (day DATE, score INT)\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 249,
   "id": "70454b18-79b9-4d83-8cc5-f68f36a18e0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# insert data into database\n",
    "sql = \"INSERT INTO googleTrendsTimeline (day, score) VALUES (%s, %s)\"\n",
    "\n",
    "for index, row in googleTrendsTimeline.iterrows():\n",
    "    day = row[\"day\"]\n",
    "    score = row[\"score\"]\n",
    "\n",
    "    val = (day, score)\n",
    "    mycursor.execute(sql, val)\n",
    "\n",
    "mydb.commit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "id": "71202f79-09b9-40bc-8154-cc7aed558f4b",
   "metadata": {},
   "outputs": [],
   "source": [
    "googleTrendsGeoMap = pd.read_csv(\"./data/geoMap.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "id": "2442586a-7b38-4737-8092-8d4b20938946",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['country', ' score'], dtype='object')"
      ]
     },
     "execution_count": 259,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "googleTrendsGeoMap.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "id": "5139a313-6f2d-45d2-852f-f721d54e07d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# replace NaN values with 0 \n",
    "googleTrendsGeoMap = googleTrendsGeoMap.fillna(0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "id": "857d1d63-24e0-4fb9-94dd-556fd926d25b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create Twitter database\n",
    "mycursor.execute(\"DROP TABLE IF EXISTS googleTrendsGeo;\")\n",
    "mycursor.execute(\"CREATE TABLE googleTrendsGeo (country VARCHAR(50), score INT)\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "id": "c393c22b-047d-498f-961a-0d44a28dc7b4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# insert data into database\n",
    "sql = \"INSERT INTO googleTrendsGeo (country, score) VALUES (%s, %s)\"\n",
    "\n",
    "for index, row in googleTrendsGeoMap.iterrows():\n",
    "    country = row[\"country\"]\n",
    "    score = row[\" score\"]\n",
    "\n",
    "    val = (day, score)\n",
    "    mycursor.execute(sql, val)\n",
    "\n",
    "mydb.commit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3cc195f6-7571-43bb-ad03-f8bad66d832c",
   "metadata": {},
   "source": [
    "## Data Preprosessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b9130cdb-d477-4e16-8a36-f280fcae11db",
   "metadata": {},
   "outputs": [],
   "source": [
    "def removeStopwords(string):\n",
    "    # tokenize tweet\n",
    "    text_tokens = word_tokenize(string)\n",
    "    stop_words = stopwords.words()\n",
    "    # remove additional keywords \n",
    "    stop_words.extend(['chat', 'gpt', 'chatgpt'])\n",
    "    # remove stop words\n",
    "    tokens_without_sw = [word for word in text_tokens if not word in stop_words]\n",
    "    # detokenize tweets\n",
    "    preprocessedString = TreebankWordDetokenizer().detokenize(tokens_without_sw)\n",
    "    return preprocessedString\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0f4f3740-e188-4de2-b729-f29fa8d2b792",
   "metadata": {},
   "outputs": [],
   "source": [
    "# preprocess the text string\n",
    "data[\"contentPrepprocessed\"] = \"\"\n",
    "\n",
    "translate_table = dict((ord(char), None) for char in string.punctuation)  \n",
    "# convert tweets to lower case\n",
    "data[\"contentPrepprocessed\"] = data[\"content\"].apply(lambda x: x.lower())\n",
    "# remove punctuation\n",
    "data[\"contentPrepprocessed\"] = data[\"contentPrepprocessed\"].apply(lambda x: x.translate(translate_table))\n",
    "#remove stopwords\n",
    "data[\"contentPrepprocessed\"] = data[\"contentPrepprocessed\"].apply(lambda x: removeStopwords(x))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "12c29a0a-00e0-4d60-865e-1d07b1ed754f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<>:4: DeprecationWarning: invalid escape sequence '\\d'\n",
      "<>:4: DeprecationWarning: invalid escape sequence '\\d'\n",
      "/var/folders/ym/8kx0qq150538nzfzgpq76bfc0000gn/T/ipykernel_3933/513063045.py:4: DeprecationWarning: invalid escape sequence '\\d'\n",
      "  data[\"contentPrepprocessed\"] = data[\"contentPrepprocessed\"].apply(lambda x: re.sub(\"^\\d+\\s|\\s\\d+\\s|\\s\\d+$\", \"\", x))\n"
     ]
    }
   ],
   "source": [
    "# remove urls\n",
    "data[\"contentPrepprocessed\"] = data[\"contentPrepprocessed\"].apply(lambda x: re.sub(r'http\\S+', '', x))\n",
    "# remove digits\n",
    "data[\"contentPrepprocessed\"] = data[\"contentPrepprocessed\"].apply(lambda x: re.sub(\"^\\d+\\s|\\s\\d+\\s|\\s\\d+$\", \"\", x))\n",
    "# remove mentions\n",
    "data[\"contentPrepprocessed\"] = data[\"contentPrepprocessed\"].apply(lambda x: re.sub(\"@[A-Za-z0-9_]+\",\"\", x))\n",
    "\n",
    "#remove emojis\n",
    "emoji_pattern = re.compile(\"[\"\n",
    "        u\"\\U0001F600-\\U0001F64F\"  # emoticons\n",
    "        u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n",
    "        u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n",
    "        u\"\\U0001F1E0-\\U0001F1FF\"  # flags (iOS)\n",
    "                           \"]+\", flags=re.UNICODE)\n",
    "\n",
    "data[\"contentPrepprocessed\"] = data[\"contentPrepprocessed\"].apply(lambda x: emoji_pattern.sub(r'', x))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "58187641-cee0-4ea4-9c87-f5d3d83b7a8b",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "ename": "ProgrammingError",
     "evalue": "1060 (42S21): Duplicate column name 'tweetPreprocessed'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mMySQLInterfaceError\u001b[0m                       Traceback (most recent call last)",
      "File \u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/mysql/connector/connection_cext.py:611\u001b[0m, in \u001b[0;36mCMySQLConnection.cmd_query\u001b[0;34m(self, query, raw, buffered, raw_as_string)\u001b[0m\n\u001b[1;32m    610\u001b[0m         query \u001b[38;5;241m=\u001b[39m query\u001b[38;5;241m.\u001b[39mencode(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mutf-8\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m--> 611\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_cmysql\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mquery\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    612\u001b[0m \u001b[43m        \u001b[49m\u001b[43mquery\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    613\u001b[0m \u001b[43m        \u001b[49m\u001b[43mraw\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mraw\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    614\u001b[0m \u001b[43m        \u001b[49m\u001b[43mbuffered\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mbuffered\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    615\u001b[0m \u001b[43m        \u001b[49m\u001b[43mraw_as_string\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mraw_as_string\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    616\u001b[0m \u001b[43m        \u001b[49m\u001b[43mquery_attrs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_query_attrs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    617\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    618\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m MySQLInterfaceError \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "\u001b[0;31mMySQLInterfaceError\u001b[0m: Duplicate column name 'tweetPreprocessed'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[0;31mProgrammingError\u001b[0m                          Traceback (most recent call last)",
      "Cell \u001b[0;32mIn [9], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# add new columns to the mysql twitter table\u001b[39;00m\n\u001b[1;32m      2\u001b[0m query\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mALTER TABLE Twitter ADD tweetPreprocessed VARCHAR(1000)\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m----> 3\u001b[0m mycursor\u001b[38;5;241m.\u001b[39mexecute(query)\n\u001b[1;32m      4\u001b[0m db\u001b[38;5;241m.\u001b[39mcommit()\n",
      "File \u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/mysql/connector/cursor_cext.py:330\u001b[0m, in \u001b[0;36mCMySQLCursor.execute\u001b[0;34m(self, operation, params, multi)\u001b[0m\n\u001b[1;32m    325\u001b[0m             \u001b[38;5;28;01mraise\u001b[39;00m ProgrammingError(\n\u001b[1;32m    326\u001b[0m                 \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNot all parameters were used in the SQL statement\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    327\u001b[0m             )\n\u001b[1;32m    329\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 330\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_cnx\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcmd_query\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    331\u001b[0m \u001b[43m        \u001b[49m\u001b[43mstmt\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    332\u001b[0m \u001b[43m        \u001b[49m\u001b[43mraw\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_raw\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    333\u001b[0m \u001b[43m        \u001b[49m\u001b[43mbuffered\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_buffered\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    334\u001b[0m \u001b[43m        \u001b[49m\u001b[43mraw_as_string\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_raw_as_string\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    335\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    336\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m MySQLInterfaceError \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m    337\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m get_mysql_exception(\n\u001b[1;32m    338\u001b[0m         msg\u001b[38;5;241m=\u001b[39merr\u001b[38;5;241m.\u001b[39mmsg, errno\u001b[38;5;241m=\u001b[39merr\u001b[38;5;241m.\u001b[39merrno, sqlstate\u001b[38;5;241m=\u001b[39merr\u001b[38;5;241m.\u001b[39msqlstate\n\u001b[1;32m    339\u001b[0m     ) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n",
      "File \u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/mysql/connector/connection_cext.py:619\u001b[0m, in \u001b[0;36mCMySQLConnection.cmd_query\u001b[0;34m(self, query, raw, buffered, raw_as_string)\u001b[0m\n\u001b[1;32m    611\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_cmysql\u001b[38;5;241m.\u001b[39mquery(\n\u001b[1;32m    612\u001b[0m         query,\n\u001b[1;32m    613\u001b[0m         raw\u001b[38;5;241m=\u001b[39mraw,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    616\u001b[0m         query_attrs\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_query_attrs,\n\u001b[1;32m    617\u001b[0m     )\n\u001b[1;32m    618\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m MySQLInterfaceError \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[0;32m--> 619\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m get_mysql_exception(\n\u001b[1;32m    620\u001b[0m         err\u001b[38;5;241m.\u001b[39merrno, msg\u001b[38;5;241m=\u001b[39merr\u001b[38;5;241m.\u001b[39mmsg, sqlstate\u001b[38;5;241m=\u001b[39merr\u001b[38;5;241m.\u001b[39msqlstate\n\u001b[1;32m    621\u001b[0m     ) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[1;32m    622\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mAttributeError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m    623\u001b[0m     addr \u001b[38;5;241m=\u001b[39m (\n\u001b[1;32m    624\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_unix_socket \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_unix_socket \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_host\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m:\u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_port\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    625\u001b[0m     )\n",
      "\u001b[0;31mProgrammingError\u001b[0m: 1060 (42S21): Duplicate column name 'tweetPreprocessed'"
     ]
    }
   ],
   "source": [
    "# add new columns to the mysql twitter table\n",
    "query=\"ALTER TABLE Twitter ADD tweetPreprocessed VARCHAR(1000)\"\n",
    "mycursor.execute(query)\n",
    "db.commit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3e0d88c8-e003-437f-8e62-8bf47b0d6b24",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[0;32mIn [7], line 8\u001b[0m\n\u001b[1;32m      6\u001b[0m     ID \u001b[38;5;241m=\u001b[39m row[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mid\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m      7\u001b[0m     val \u001b[38;5;241m=\u001b[39m (tweetPreprocessed,ID)\n\u001b[0;32m----> 8\u001b[0m     mycursor\u001b[38;5;241m.\u001b[39mexecute(sql, val)\n\u001b[1;32m     11\u001b[0m mydb\u001b[38;5;241m.\u001b[39mcommit()\n",
      "File \u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/mysql/connector/cursor_cext.py:330\u001b[0m, in \u001b[0;36mCMySQLCursor.execute\u001b[0;34m(self, operation, params, multi)\u001b[0m\n\u001b[1;32m    325\u001b[0m             \u001b[38;5;28;01mraise\u001b[39;00m ProgrammingError(\n\u001b[1;32m    326\u001b[0m                 \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNot all parameters were used in the SQL statement\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    327\u001b[0m             )\n\u001b[1;32m    329\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 330\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_cnx\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcmd_query\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    331\u001b[0m \u001b[43m        \u001b[49m\u001b[43mstmt\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    332\u001b[0m \u001b[43m        \u001b[49m\u001b[43mraw\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_raw\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    333\u001b[0m \u001b[43m        \u001b[49m\u001b[43mbuffered\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_buffered\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    334\u001b[0m \u001b[43m        \u001b[49m\u001b[43mraw_as_string\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_raw_as_string\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    335\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    336\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m MySQLInterfaceError \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m    337\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m get_mysql_exception(\n\u001b[1;32m    338\u001b[0m         msg\u001b[38;5;241m=\u001b[39merr\u001b[38;5;241m.\u001b[39mmsg, errno\u001b[38;5;241m=\u001b[39merr\u001b[38;5;241m.\u001b[39merrno, sqlstate\u001b[38;5;241m=\u001b[39merr\u001b[38;5;241m.\u001b[39msqlstate\n\u001b[1;32m    339\u001b[0m     ) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n",
      "File \u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/mysql/connector/connection_cext.py:611\u001b[0m, in \u001b[0;36mCMySQLConnection.cmd_query\u001b[0;34m(self, query, raw, buffered, raw_as_string)\u001b[0m\n\u001b[1;32m    609\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(query, \u001b[38;5;28mbytes\u001b[39m):\n\u001b[1;32m    610\u001b[0m         query \u001b[38;5;241m=\u001b[39m query\u001b[38;5;241m.\u001b[39mencode(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mutf-8\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m--> 611\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_cmysql\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mquery\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    612\u001b[0m \u001b[43m        \u001b[49m\u001b[43mquery\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    613\u001b[0m \u001b[43m        \u001b[49m\u001b[43mraw\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mraw\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    614\u001b[0m \u001b[43m        \u001b[49m\u001b[43mbuffered\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mbuffered\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    615\u001b[0m \u001b[43m        \u001b[49m\u001b[43mraw_as_string\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mraw_as_string\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    616\u001b[0m \u001b[43m        \u001b[49m\u001b[43mquery_attrs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_query_attrs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    617\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    618\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m MySQLInterfaceError \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m    619\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m get_mysql_exception(\n\u001b[1;32m    620\u001b[0m         err\u001b[38;5;241m.\u001b[39merrno, msg\u001b[38;5;241m=\u001b[39merr\u001b[38;5;241m.\u001b[39mmsg, sqlstate\u001b[38;5;241m=\u001b[39merr\u001b[38;5;241m.\u001b[39msqlstate\n\u001b[1;32m    621\u001b[0m     ) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "# insert preprocessed tweets into the database\n",
    "sql = \"UPDATE Twitter SET tweetPreprocessed = %s WHERE id = %s;\"\n",
    "\n",
    "for index, row in data.iterrows():\n",
    "    tweetPreprocessed = row[\"contentPrepprocessed\"]\n",
    "    ID = row[\"id\"]\n",
    "    val = (tweetPreprocessed,ID)\n",
    "    mycursor.execute(sql, val)\n",
    "\n",
    "    \n",
    "mydb.commit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "093d66e3-4d8a-4446-80fa-6f32be6c10d0",
   "metadata": {},
   "source": [
    "## Word Cloud"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "9e906b79-1486-4670-81c4-ae773a286579",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create text string with all the Tweets\n",
    "stringChatGPT = \"\"\n",
    "for index, row in data.iterrows():\n",
    "    if not (type(row[\"contentPrepprocessed\"]) == float):\n",
    "        stringChatGPT = stringChatGPT + \" \" + row[\"contentPrepprocessed\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "7017f8c0-f33c-4506-a87e-708ef18a9a49",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:499: DeprecationWarning: ROTATE_90 is deprecated and will be removed in Pillow 10 (2023-07-01). Use Transpose.ROTATE_90 instead.\n",
      "  orientation = Image.ROTATE_90\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:499: DeprecationWarning: ROTATE_90 is deprecated and will be removed in Pillow 10 (2023-07-01). Use Transpose.ROTATE_90 instead.\n",
      "  orientation = Image.ROTATE_90\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:499: DeprecationWarning: ROTATE_90 is deprecated and will be removed in Pillow 10 (2023-07-01). Use Transpose.ROTATE_90 instead.\n",
      "  orientation = Image.ROTATE_90\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:499: DeprecationWarning: ROTATE_90 is deprecated and will be removed in Pillow 10 (2023-07-01). Use Transpose.ROTATE_90 instead.\n",
      "  orientation = Image.ROTATE_90\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:519: DeprecationWarning: ROTATE_90 is deprecated and will be removed in Pillow 10 (2023-07-01). Use Transpose.ROTATE_90 instead.\n",
      "  orientation = (Image.ROTATE_90 if orientation is None else\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:499: DeprecationWarning: ROTATE_90 is deprecated and will be removed in Pillow 10 (2023-07-01). Use Transpose.ROTATE_90 instead.\n",
      "  orientation = Image.ROTATE_90\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:499: DeprecationWarning: ROTATE_90 is deprecated and will be removed in Pillow 10 (2023-07-01). Use Transpose.ROTATE_90 instead.\n",
      "  orientation = Image.ROTATE_90\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:519: DeprecationWarning: ROTATE_90 is deprecated and will be removed in Pillow 10 (2023-07-01). Use Transpose.ROTATE_90 instead.\n",
      "  orientation = (Image.ROTATE_90 if orientation is None else\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:499: DeprecationWarning: ROTATE_90 is deprecated and will be removed in Pillow 10 (2023-07-01). Use Transpose.ROTATE_90 instead.\n",
      "  orientation = Image.ROTATE_90\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:519: DeprecationWarning: ROTATE_90 is deprecated and will be removed in Pillow 10 (2023-07-01). Use Transpose.ROTATE_90 instead.\n",
      "  orientation = (Image.ROTATE_90 if orientation is None else\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/wordcloud/wordcloud.py:508: DeprecationWarning: textsize is deprecated and will be removed in Pillow 10 (2023-07-01). Use textbbox or textlength instead.\n",
      "  box_size = draw.textsize(word, font=transposed_font)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# generate a word cloud with the most frequently used words. The bigger the word, the more frequently it was used\n",
    "wordcloud = WordCloud(width=1200, height=800, collocations=False, max_font_size=120, max_words=100, background_color=\"white\").generate(stringChatGPT)\n",
    "\n",
    "# Display the generated image:\n",
    "plt.imshow(wordcloud, interpolation='bilinear')\n",
    "plt.axis(\"off\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b2b5400-176a-4b34-807b-885871c64ff1",
   "metadata": {},
   "source": [
    "## Sentiment Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "8c610e1a-5afc-406e-b177-21f8f5ee4f88",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/ym/8kx0qq150538nzfzgpq76bfc0000gn/T/ipykernel_3933/1582913621.py:8: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data[\"sentimentScore\"][index] = score\n"
     ]
    }
   ],
   "source": [
    "# init the sentiment analyzer\n",
    "sia = SentimentIntensityAnalyzer()\n",
    "data[\"sentimentScore\"] = \"\"\n",
    "\n",
    "# determine sentiment score of tweets \n",
    "for index,row in data.iterrows():\n",
    "    score = sia.polarity_scores(row[\"content\"])[\"compound\"]\n",
    "    data[\"sentimentScore\"][index] = score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "621c6d91-cd80-4a56-8e32-765a7d4e230d",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/ym/8kx0qq150538nzfzgpq76bfc0000gn/T/ipykernel_3933/644670197.py:7: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data[\"sentiment\"][index] = \"positive\"\n",
      "/var/folders/ym/8kx0qq150538nzfzgpq76bfc0000gn/T/ipykernel_3933/644670197.py:9: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data[\"sentiment\"][index] = \"neutral\"\n",
      "/var/folders/ym/8kx0qq150538nzfzgpq76bfc0000gn/T/ipykernel_3933/644670197.py:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data[\"sentiment\"][index] = \"negative\"\n"
     ]
    }
   ],
   "source": [
    "# transfrom sentiment score and assign sentiment labels positiv, neutral and negative\n",
    "data[\"sentiment\"] = \"\"\n",
    "for index,row in data.iterrows():\n",
    "    if(row[\"sentimentScore\"]< -0.05):\n",
    "        data[\"sentiment\"][index] = \"negative\"\n",
    "    elif(row[\"sentimentScore\"]> 0.05):\n",
    "        data[\"sentiment\"][index] = \"positive\"\n",
    "    elif(row[\"sentimentScore\"]< 0.05 and row[\"sentimentScore\"]> -0.05 ):\n",
    "        data[\"sentiment\"][index] = \"neutral\"\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 291,
   "id": "d028a785-4957-405b-b899-4e1fd0f17fbc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# drop first column to avoid double indexes\n",
    "data = data.iloc[: , 1:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 294,
   "id": "6411740d-8d1f-404e-a8e3-17a968439303",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>id</th>\n",
       "      <th>content</th>\n",
       "      <th>username</th>\n",
       "      <th>like_count</th>\n",
       "      <th>retweet_count</th>\n",
       "      <th>contentPrepprocessed</th>\n",
       "      <th>sentimentScore</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2023-03-29 22:58:21+00:00</td>\n",
       "      <td>1641213230730051584</td>\n",
       "      <td>Free AI marketing and automation tools, strate...</td>\n",
       "      <td>RealProfitPros</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>free marketing automation tools strategies col...</td>\n",
       "      <td>0.5106</td>\n",
       "      <td>positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2023-03-29 22:58:18+00:00</td>\n",
       "      <td>1641213218520481805</td>\n",
       "      <td>@MecoleHardman4 Chat GPT says it’s 15. 😂</td>\n",
       "      <td>AmyLouWho321</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>mecolehardman4 ’</td>\n",
       "      <td>0.4404</td>\n",
       "      <td>positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2023-03-29 22:57:53+00:00</td>\n",
       "      <td>1641213115684536323</td>\n",
       "      <td>https://t.co/FjJSprt0te - Chat with any PDF!\\n...</td>\n",
       "      <td>yjleon1976</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>pdf check quickly answers questions pdfs perf...</td>\n",
       "      <td>0.7424</td>\n",
       "      <td>positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2023-03-29 22:57:52+00:00</td>\n",
       "      <td>1641213110915571715</td>\n",
       "      <td>AI muses: \"In the court of life, we must all f...</td>\n",
       "      <td>ChatGPT_Thinks</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>muses court life judge destiny jury actions ⚖️...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>neutral</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2023-03-29 22:57:26+00:00</td>\n",
       "      <td>1641213003260633088</td>\n",
       "      <td>Most people haven't heard of Chat GPT yet.\\nFi...</td>\n",
       "      <td>nikocosmonaut</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>heard elite factions decide safety push agenda...</td>\n",
       "      <td>0.0258</td>\n",
       "      <td>neutral</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>499969</th>\n",
       "      <td>2023-01-04 07:18:08+00:00</td>\n",
       "      <td>1610536038094757888</td>\n",
       "      <td>@GoogleAI #LAMDA Versus @OpenAI #ChatGPT ?! Wh...</td>\n",
       "      <td>Pup_In_Cup</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>googleai lamda versus openai cares lamda avail...</td>\n",
       "      <td>0.4408</td>\n",
       "      <td>positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>499970</th>\n",
       "      <td>2023-01-04 07:17:50+00:00</td>\n",
       "      <td>1610535961670172674</td>\n",
       "      <td>#ChatGPT \\n\\nSo much #Censorship.\\n\\nNever tru...</td>\n",
       "      <td>TryingToOffend</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>censorship trust system admin</td>\n",
       "      <td>-0.4023</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>499971</th>\n",
       "      <td>2023-01-04 07:17:20+00:00</td>\n",
       "      <td>1610535837363486720</td>\n",
       "      <td>all my twitter feed is about ChatGPT and @Open...</td>\n",
       "      <td>mcp350</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>twitter feed openai</td>\n",
       "      <td>0.6486</td>\n",
       "      <td>positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>499972</th>\n",
       "      <td>2023-01-04 07:17:08+00:00</td>\n",
       "      <td>1610535786017091584</td>\n",
       "      <td>I'm quite amazed by Chat GPT. A really promisi...</td>\n",
       "      <td>manumurali369</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>amazed promising person and mark google</td>\n",
       "      <td>0.9052</td>\n",
       "      <td>positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>499973</th>\n",
       "      <td>2023-01-04 07:16:56+00:00</td>\n",
       "      <td>1610535734758219778</td>\n",
       "      <td>I used chat gpt to get gym workout program and...</td>\n",
       "      <td>pnik91</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>gym workout program sore rn</td>\n",
       "      <td>0.3082</td>\n",
       "      <td>positive</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>496961 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                             date                   id  \\\n",
       "0       2023-03-29 22:58:21+00:00  1641213230730051584   \n",
       "1       2023-03-29 22:58:18+00:00  1641213218520481805   \n",
       "2       2023-03-29 22:57:53+00:00  1641213115684536323   \n",
       "3       2023-03-29 22:57:52+00:00  1641213110915571715   \n",
       "4       2023-03-29 22:57:26+00:00  1641213003260633088   \n",
       "...                           ...                  ...   \n",
       "499969  2023-01-04 07:18:08+00:00  1610536038094757888   \n",
       "499970  2023-01-04 07:17:50+00:00  1610535961670172674   \n",
       "499971  2023-01-04 07:17:20+00:00  1610535837363486720   \n",
       "499972  2023-01-04 07:17:08+00:00  1610535786017091584   \n",
       "499973  2023-01-04 07:16:56+00:00  1610535734758219778   \n",
       "\n",
       "                                                  content        username  \\\n",
       "0       Free AI marketing and automation tools, strate...  RealProfitPros   \n",
       "1                @MecoleHardman4 Chat GPT says it’s 15. 😂    AmyLouWho321   \n",
       "2       https://t.co/FjJSprt0te - Chat with any PDF!\\n...      yjleon1976   \n",
       "3       AI muses: \"In the court of life, we must all f...  ChatGPT_Thinks   \n",
       "4       Most people haven't heard of Chat GPT yet.\\nFi...   nikocosmonaut   \n",
       "...                                                   ...             ...   \n",
       "499969  @GoogleAI #LAMDA Versus @OpenAI #ChatGPT ?! Wh...      Pup_In_Cup   \n",
       "499970  #ChatGPT \\n\\nSo much #Censorship.\\n\\nNever tru...  TryingToOffend   \n",
       "499971  all my twitter feed is about ChatGPT and @Open...          mcp350   \n",
       "499972  I'm quite amazed by Chat GPT. A really promisi...   manumurali369   \n",
       "499973  I used chat gpt to get gym workout program and...          pnik91   \n",
       "\n",
       "        like_count  retweet_count  \\\n",
       "0                0              0   \n",
       "1                0              0   \n",
       "2                0              0   \n",
       "3                0              0   \n",
       "4                0              0   \n",
       "...            ...            ...   \n",
       "499969           1              0   \n",
       "499970           2              0   \n",
       "499971           3              1   \n",
       "499972           1              0   \n",
       "499973           0              0   \n",
       "\n",
       "                                     contentPrepprocessed  sentimentScore  \\\n",
       "0       free marketing automation tools strategies col...          0.5106   \n",
       "1                                        mecolehardman4 ’          0.4404   \n",
       "2        pdf check quickly answers questions pdfs perf...          0.7424   \n",
       "3       muses court life judge destiny jury actions ⚖️...          0.0000   \n",
       "4       heard elite factions decide safety push agenda...          0.0258   \n",
       "...                                                   ...             ...   \n",
       "499969  googleai lamda versus openai cares lamda avail...          0.4408   \n",
       "499970                     censorship trust system admin          -0.4023   \n",
       "499971                               twitter feed openai           0.6486   \n",
       "499972            amazed promising person and mark google          0.9052   \n",
       "499973                        gym workout program sore rn          0.3082   \n",
       "\n",
       "       sentiment  \n",
       "0       positive  \n",
       "1       positive  \n",
       "2       positive  \n",
       "3        neutral  \n",
       "4        neutral  \n",
       "...          ...  \n",
       "499969  positive  \n",
       "499970  negative  \n",
       "499971  positive  \n",
       "499972  positive  \n",
       "499973  positive  \n",
       "\n",
       "[496961 rows x 9 columns]"
      ]
     },
     "execution_count": 294,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 293,
   "id": "2b07e0ba-7ff4-46fd-a0fb-e69bfb85dd4c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# save the updates data  as csv file\n",
    "data.to_csv(\"./data/ChatGPT.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "id": "f46c3468-a372-4986-bab3-504eccf9d62a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# write the updated data into the mysql database\n",
    "mycursor.execute(\"DROP TABLE IF EXISTS Twitter;\")\n",
    "mycursor.execute(\"CREATE TABLE Twitter (id VARCHAR(30), date DATETIME,tweet VARCHAR(1000), username VARCHAR(255), like_count INT, retweet_count INT, tweetPreprocessed VARCHAR(1000), sentimentScore FLOAT, sentiment VARCHAR(10))\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "id": "27706d16-7a8d-423c-83d5-4eba1d018fb0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# insert data into database\n",
    "sql = \"INSERT INTO Twitter (id, date,tweet,username,like_count,retweet_count,tweetPreprocessed, sentimentScore, sentiment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)\"\n",
    "\n",
    "for index, row in data.iterrows():\n",
    "    ID = row[\"id\"]\n",
    "    date = row[\"date\"]\n",
    "    tweet = row[\"content\"]\n",
    "    username = row[\"username\"]\n",
    "    like_count = row[\"like_count\"]\n",
    "    retweet_count = row[\"retweet_count\"]\n",
    "    tweetPreprocessed = row[\"contentPrepprocessed\"]\n",
    "    sentiment_score = row[\"sentimentScore\"]\n",
    "    sentiment = row[\"sentiment\"]\n",
    "    val = (ID, date,tweet,username,like_count,retweet_count,tweetPreprocessed,sentiment_score,sentiment)\n",
    "    mycursor.execute(sql, val)\n",
    "\n",
    "mydb.commit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bdba928-06e9-4f56-84e6-c40b7303ea45",
   "metadata": {},
   "source": [
    "## Clustering Analysis "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "6226b9c5-f7a7-4ac6-a471-36d9b92d455e",
   "metadata": {},
   "outputs": [],
   "source": [
    "stop_words = stopwords.words('english')\n",
    "def sent_to_words(sentences):\n",
    "    for sentence in sentences:\n",
    "        # avoid AttributeError with float object\n",
    "        if not(type(sentence) ==float):\n",
    "            #remove amp keyword\n",
    "            sentence.replace(\"amp\", '')\n",
    "        # deacc=True removes punctuations\n",
    "        yield(gensim.utils.simple_preprocess(str(sentence), deacc=True))\n",
    "\n",
    "data_words = list(sent_to_words(data[\"contentPrepprocessed\"]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "69e344c6-402e-4a8f-adbc-8505e956d27a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create Dictionary\n",
    "id2word = corpora.Dictionary(data_words)\n",
    "# Create Corpus\n",
    "texts = data_words\n",
    "# Term Document Frequency\n",
    "corpus = [id2word.doc2bow(text) for text in texts]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "a592d46e-625d-45d9-84a5-b444ce240d59",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "LdaModel.get_document_topics() missing 1 required positional argument: 'bow'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn [169], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m lda_model\u001b[38;5;241m.\u001b[39mget_document_topics()\n",
      "\u001b[0;31mTypeError\u001b[0m: LdaModel.get_document_topics() missing 1 required positional argument: 'bow'"
     ]
    }
   ],
   "source": [
    "lda_model.get_document_topics()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "8ce436ff-e050-4e93-ab0c-43ed10eec0a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "[(0,\n",
      "  '0.024*\"google\" + 0.013*\"microsoft\" + 0.011*\"bing\" + 0.010*\"bard\" + '\n",
      "  '0.010*\"openai\" + 0.010*\"search\" + 0.009*\"amp\" + 0.007*\"technology\" + '\n",
      "  '0.006*\"write\" + 0.005*\"tech\" + 0.005*\"business\" + 0.005*\"time\" + '\n",
      "  '0.005*\"asked\" + 0.004*\"marketing\" + 0.003*\"world\" + 0.003*\"free\"'),\n",
      " (1,\n",
      "  '0.023*\"gpt\" + 0.020*\"openai\" + 0.007*\"tech\" + 0.006*\"machinelearning\" + '\n",
      "  '0.006*\"midjourney\" + 0.005*\"art\" + 0.005*\"technology\" + 0.004*\"life\" + '\n",
      "  '0.004*\"microsoft\" + 0.004*\"generativeai\" + 0.004*\"chatgpt\" + 0.004*\"model\" '\n",
      "  '+ 0.004*\"deeplearning\" + 0.004*\"week\" + 0.004*\"api\" + 0.003*\"python\"'),\n",
      " (2,\n",
      "  '0.018*\"openai\" + 0.009*\"future\" + 0.006*\"intelligence\" + 0.006*\"technology\" '\n",
      "  '+ 0.005*\"artificial\" + 0.005*\"elonmusk\" + 0.005*\"news\" + 0.005*\"gpt\" + '\n",
      "  '0.004*\"youtube\" + 0.004*\"world\" + 0.004*\"read\" + 0.004*\"make\" + '\n",
      "  '0.004*\"content\" + 0.004*\"latest\" + 0.004*\"trading\" + 0.004*\"tools\"'),\n",
      " (3,\n",
      "  '0.008*\"language\" + 0.006*\"make\" + 0.006*\"openai\" + 0.005*\"answer\" + '\n",
      "  '0.005*\"write\" + 0.005*\"model\" + 0.005*\"human\" + 0.005*\"asked\" + '\n",
      "  '0.004*\"time\" + 0.004*\"work\" + 0.004*\"read\" + 0.004*\"tool\" + '\n",
      "  '0.004*\"questions\" + 0.004*\"content\" + 0.004*\"text\" + 0.004*\"writing\"'),\n",
      " (4,\n",
      "  '0.023*\"gpt\" + 0.013*\"openai\" + 0.011*\"crypto\" + 0.009*\"web\" + '\n",
      "  '0.009*\"chatbot\" + 0.009*\"nft\" + 0.007*\"chatgpt\" + 0.006*\"code\" + '\n",
      "  '0.006*\"airdrop\" + 0.005*\"amp\" + 0.005*\"data\" + 0.004*\"users\" + '\n",
      "  '0.004*\"programming\" + 0.004*\"ready\" + 0.003*\"bing\" + 0.003*\"world\"')]\n"
     ]
    }
   ],
   "source": [
    "# number of topics\n",
    "num_topics = 5\n",
    "# Build LDA model\n",
    "lda_model = gensim.models.LdaMulticore(corpus=corpus,\n",
    "                                       id2word=id2word,\n",
    "                                       num_topics=num_topics)\n",
    "# Print the most weighted Keywords of the topics\n",
    "pprint(lda_model.print_topics(num_words=16))\n",
    "doc_lda = lda_model[corpus]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "9aac434b-c6c7-4964-a6e1-4cdc103db1e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pyLDAvis/_prepare.py:247: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n",
      "  by='saliency', ascending=False).head(R).drop('saliency', 1)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
      "To disable this warning, you can either:\n",
      "\t- Avoid using `tokenizers` before the fork if possible\n",
      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/past/builtins/misc.py:45: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses\n",
      "  from imp import reload\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/past/builtins/misc.py:45: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses\n",
      "  from imp import reload\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/past/builtins/misc.py:45: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses\n",
      "  from imp import reload\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/past/builtins/misc.py:45: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses\n",
      "  from imp import reload\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/past/builtins/misc.py:45: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses\n",
      "  from imp import reload\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/past/builtins/misc.py:45: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses\n",
      "  from imp import reload\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/past/builtins/misc.py:45: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses\n",
      "  from imp import reload\n",
      "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/past/builtins/misc.py:45: DeprecationWarning: the imp module is deprecated in favour of importlib and slated for removal in Python 3.12; see the module's documentation for alternative uses\n",
      "  from imp import reload\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.3.1/pyLDAvis/js/ldavis.v1.0.0.css\">\n",
       "\n",
       "\n",
       "<div id=\"ldavis_el39331118097603247845772\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "\n",
       "var ldavis_el39331118097603247845772_data = {\"mdsDat\": {\"x\": [0.07963401915517043, 0.08416534461168297, 0.024417077443481008, -0.04981655839347965, -0.13839988281685475], \"y\": [0.04989085818007026, 0.008261148110492077, -0.01292351888985011, -0.11980104378938107, 0.07457255638866886], \"topics\": [1, 2, 3, 4, 5], \"cluster\": [1, 1, 1, 1, 1], \"Freq\": [29.15262931995894, 23.90335918149621, 19.043763374198942, 13.993622228521454, 13.906625895824456]}, \"tinfo\": {\"Term\": [\"gpt\", \"google\", \"openai\", \"crypto\", \"search\", \"nft\", \"web\", \"microsoft\", \"bard\", \"bing\", \"airdrop\", \"chatgpt\", \"chatbot\", \"future\", \"tech\", \"art\", \"machinelearning\", \"midjourney\", \"code\", \"python\", \"trading\", \"language\", \"stocks\", \"youtube\", \"deeplearning\", \"model\", \"life\", \"eth\", \"technology\", \"agix\", \"dataenrichment\", \"loveisland\", \"balloons\", \"manipulated\", \"tcs\", \"cannabis\", \"amuse\", \"hall\", \"kunst\", \"svpino\", \"cultuur\", \"chatgptedu\", \"fotografie\", \"savetime\", \"precisely\", \"gerd\", \"destination\", \"obscure\", \"adopters\", \"debuts\", \"relate\", \"hail\", \"tongue\", \"leonhard\", \"pltr\", \"specialists\", \"noting\", \"southafrica\", \"matches\", \"cyberdefense\", \"valentines\", \"tcea\", \"nan\", \"writings\", \"companylogoapi\", \"contentwriter\", \"classifier\", \"balloon\", \"opera\", \"fan\", \"natural\", \"humanlike\", \"flying\", \"liberal\", \"blurry\", \"propaganda\", \"language\", \"large\", \"pokemon\", \"upsc\", \"wrong\", \"sundar\", \"pichai\", \"responses\", \"give\", \"programmed\", \"understand\", \"jordanbpeterson\", \"generate\", \"information\", \"processing\", \"answer\", \"trained\", \"real\", \"tweet\", \"models\", \"correct\", \"text\", \"model\", \"human\", \"writers\", \"humans\", \"questions\", \"make\", \"question\", \"words\", \"answers\", \"tool\", \"video\", \"writing\", \"work\", \"write\", \"read\", \"asked\", \"time\", \"content\", \"prompt\", \"create\", \"openai\", \"data\", \"amp\", \"gpt\", \"google\", \"valentine\", \"racial\", \"longest\", \"vcbuzz\", \"nana\", \"fiat\", \"rytr\", \"devil\", \"cure\", \"shillinvillian\", \"tyrant\", \"ubs\", \"tourism\", \"deleted\", \"dis\", \"cuban\", \"chatty\", \"imaginary\", \"masks\", \"masterplan\", \"ate\", \"englishoer\", \"khi\", \"premiums\", \"mieexpert\", \"pinetwork\", \"woah\", \"attributes\", \"consent\", \"chaat\", \"sunrisesunsetpm\", \"hourlyupdate\", \"sunset\", \"tempupdate\", \"speedkmhr\", \"weatherupdate\", \"sunrise\", \"bowl\", \"karachi\", \"apprenticebard\", \"status\", \"dominate\", \"rival\", \"buzzfeed\", \"amo\", \"nightmare\", \"fogoros\", \"google\", \"islamabad\", \"search\", \"isb\", \"engine\", \"bard\", \"searchengine\", \"sector\", \"microsoft\", \"teachers\", \"bing\", \"googleai\", \"engines\", \"apple\", \"googles\", \"baidu\", \"business\", \"edge\", \"marketing\", \"amp\", \"students\", \"lamda\", \"pm\", \"education\", \"bardai\", \"write\", \"technology\", \"tech\", \"media\", \"race\", \"schools\", \"time\", \"free\", \"asked\", \"openai\", \"seo\", \"social\", \"world\", \"chatbots\", \"tools\", \"writing\", \"today\", \"content\", \"great\", \"create\", \"work\", \"future\", \"learn\", \"chatbot\", \"thesaurustweet\", \"jpmorgan\", \"deepfakes\", \"relation\", \"captain\", \"hitler\", \"praising\", \"gathering\", \"deploying\", \"businessprompts\", \"solopreneur\", \"tea\", \"humanlikerobots\", \"aicrypto\", \"iamsrk\", \"regions\", \"pictory\", \"buzzy\", \"incorporates\", \"multibillion\", \"creativeprompts\", \"humanlikerobot\", \"conversationedu\", \"hinduism\", \"textgenerating\", \"turkiye\", \"westworld\", \"googlecloudtech\", \"fortunemagazine\", \"ideological\", \"aiprompts\", \"policies\", \"cai\", \"bottomfishing\", \"yt\", \"redditarmy\", \"tothemoon\", \"stockstowatch\", \"daytrading\", \"stockstobuy\", \"yolo\", \"fomo\", \"investments\", \"chatgptprompts\", \"cryptotalkies\", \"ftm\", \"cryptomarket\", \"hunter\", \"stocks\", \"sidehustles\", \"hippy\", \"investing\", \"trading\", \"altman\", \"sentiment\", \"options\", \"sam\", \"rndr\", \"writingprompts\", \"wfh\", \"ideaprompts\", \"youtube\", \"signal\", \"episode\", \"podcast\", \"future\", \"artificial\", \"ceo\", \"intelligence\", \"news\", \"latest\", \"openai\", \"elonmusk\", \"twitter\", \"check\", \"world\", \"technology\", \"tools\", \"read\", \"content\", \"bitcoin\", \"make\", \"seo\", \"learn\", \"written\", \"chatbot\", \"tech\", \"gpt\", \"amp\", \"chatgpt\", \"asked\", \"interesting\", \"article\", \"prompts\", \"aipadtweet\", \"superbowl\", \"contentcreators\", \"martech\", \"mmo\", \"mlsogood\", \"gtch\", \"gptchatgpt\", \"ordinary\", \"bbai\", \"aidemo\", \"aiispresent\", \"photoncommerce\", \"dell\", \"iwork\", \"ces\", \"creativecontent\", \"nexttopwriter\", \"equality\", \"therabbithole\", \"interior\", \"instructgpt\", \"dhenschen\", \"soun\", \"flux\", \"reactions\", \"nftgiveaway\", \"dose\", \"mattgsouthern\", \"mindbreeze\", \"mvollmer\", \"mlart\", \"investorideas\", \"efipm\", \"kalydeoo\", \"nicochan\", \"insurtech\", \"cybersecurite\", \"launchpad\", \"digitalartist\", \"frronconi\", \"curieuxexplorer\", \"enilev\", \"sallyeaves\", \"january\", \"jblefevre\", \"haroldsinnott\", \"oriele\", \"digitalart\", \"aiartcommunity\", \"khuloodalmani\", \"opensea\", \"deeplearning\", \"fintech\", \"art\", \"nftcommunity\", \"bigger\", \"stablediffusion\", \"nocode\", \"aiart\", \"midjourney\", \"gpt\", \"machinelearning\", \"cc\", \"week\", \"life\", \"openai\", \"aiartwork\", \"python\", \"api\", \"generativeai\", \"tech\", \"open\", \"imagine\", \"join\", \"love\", \"daysofcode\", \"technology\", \"model\", \"chatgpt\", \"innovation\", \"nft\", \"microsoft\", \"data\", \"metaverse\", \"bing\", \"text\", \"latest\", \"education\", \"time\", \"amp\", \"disclosetv\", \"adani\", \"gitagpt\", \"aussieed\", \"albt\", \"imgnai\", \"turkish\", \"twitfi\", \"heck\", \"nyse\", \"baba\", \"amountvalue\", \"usdwhalealert\", \"fronk\", \"aiwars\", \"mania\", \"speechtotext\", \"badly\", \"tsunami\", \"maki\", \"rlc\", \"nifty\", \"aienabled\", \"nostr\", \"converse\", \"motherboard\", \"wireless\", \"frameworks\", \"jumps\", \"stance\", \"chatbotai\", \"chatgptgod\", \"tsuka\", \"luna\", \"bcb\", \"neuroniai\", \"cryptolaunchpad\", \"poet\", \"ailaunchpad\", \"aiprojects\", \"quack\", \"damus\", \"coin\", \"agix\", \"crv\", \"gala\", \"kaspersky\", \"fet\", \"min\", \"ocean\", \"woof\", \"airdrop\", \"gptchat\", \"crypto\", \"apt\", \"bone\", \"floki\", \"bnb\", \"domains\", \"eth\", \"javascript\", \"bonk\", \"nft\", \"invest\", \"domain\", \"token\", \"defi\", \"doge\", \"web\", \"enter\", \"shib\", \"cryptocurrency\", \"btc\", \"gpt\", \"programming\", \"developers\", \"chatbot\", \"ready\", \"buy\", \"chatgpt\", \"code\", \"users\", \"openai\", \"blockchain\", \"python\", \"coding\", \"data\", \"times\", \"amp\", \"openaichatgpt\", \"version\", \"world\", \"bing\", \"future\", \"powerful\", \"technology\", \"time\", \"asked\"], \"Freq\": [44575.0, 37048.0, 62704.0, 9646.0, 14609.0, 8877.0, 11499.0, 23401.0, 17126.0, 22295.0, 4560.0, 12680.0, 16757.0, 16193.0, 16997.0, 5059.0, 9189.0, 7162.0, 10079.0, 5301.0, 4431.0, 14881.0, 3976.0, 5985.0, 3294.0, 11972.0, 5921.0, 2637.0, 21730.0, 2144.0, 220.31244245196376, 225.06363906680042, 170.14906073830045, 153.5811348733894, 144.16362787829357, 133.97923012911963, 125.81226928945078, 120.07465233363017, 117.02664810507058, 117.1432447776069, 112.8896412548875, 117.46141201568953, 112.85990313166002, 112.51416731655442, 107.62005458482167, 107.62953265283632, 108.82279402262098, 105.2850640462615, 106.3284075818537, 109.07014420454327, 129.91374160255697, 100.15440503441276, 97.90123268529237, 96.85684820581417, 104.25707169366181, 96.0251011689861, 93.49780994411708, 93.36318850639681, 136.5749935470795, 132.02211317848239, 800.5252069720078, 273.9819971062846, 3152.852567337813, 233.2585410318304, 207.49013949340298, 118.49031382452645, 332.44302742517834, 234.7123123057172, 531.9418297484372, 150.03176824011481, 2243.6987516857916, 1181.2817930815988, 201.39636632631266, 563.9704239880665, 192.01224623669734, 713.8182190929605, 11376.04068131924, 3181.2574058068826, 266.27342412479493, 507.9634791455956, 3748.910623519801, 431.66461525008424, 436.234775287189, 3037.459357421353, 5292.009697100726, 992.6253307872919, 3548.5669253948386, 951.0392938223758, 4530.862761812552, 5166.892712583301, 1483.2250331592595, 7673.162656411627, 2112.0571747201197, 4707.722064601841, 2796.4959688914146, 4775.134554902112, 1706.515955745502, 5673.401368553819, 7313.722409626552, 7117.129791145363, 1889.1849088075232, 3550.9077561764643, 5744.335624038429, 9123.47703235417, 4314.212842072923, 2000.6520728489284, 4007.1464049074807, 5821.785355494305, 4385.532093393097, 5377.344479877333, 6030.191174973659, 7566.761448501577, 5861.536350833151, 6899.480214641442, 6582.363562872383, 5727.055341921762, 3909.082565829891, 4590.824986617318, 8560.975676036463, 4507.419741257021, 4614.166323391142, 4941.6932906045495, 4754.774306100933, 446.9368089884332, 222.36015342951615, 210.42688215601598, 143.71542208785485, 129.25506095122245, 106.85907091383, 101.36098521892417, 103.28029522671389, 103.88313370937628, 102.01878973441758, 128.5284006535099, 125.07034719312644, 89.99482181145204, 109.17875788910605, 96.05624196052106, 86.65068046781663, 83.32740070120535, 85.97582372441978, 80.66534847370771, 79.24135267906067, 78.77046681558579, 82.98803620984772, 366.6299795634541, 77.43469698406403, 76.51337355569608, 78.46741692127016, 76.34965240233228, 75.90926828476478, 89.78051897047162, 77.0704818802823, 571.8479541381197, 571.3550746740613, 579.2611631505081, 570.0507319727851, 570.3504486866202, 573.4128060070924, 539.9478177308971, 198.69272124858333, 432.08239584134503, 129.20126287920675, 883.5213883061019, 269.62186750708787, 2791.370286458377, 193.47860276513384, 381.09522816688286, 251.6511013126045, 408.9202235091129, 29438.10260837337, 254.7040071347868, 11828.829989285787, 209.82040502619822, 3700.5106975932736, 12687.846553443638, 513.1627746986142, 566.4865108742905, 15671.488633678264, 1948.1260088994193, 13757.687735336687, 2227.2996935462297, 939.0893701726995, 1418.5142131368957, 1968.7039691003367, 1118.5925131944596, 6191.415337804585, 1544.7556117493302, 4560.049933200288, 11359.284729203342, 3219.911712605766, 1105.6042858066926, 1105.072917541613, 3742.3546008212065, 2137.80270155583, 7597.070913298329, 8102.242356349607, 6736.298886066447, 2100.1341324622144, 1443.355050627395, 1008.2184911599129, 5848.924664560075, 3937.858735138125, 5590.404120853432, 12339.163172270104, 2581.6160239515807, 1896.2065928708091, 4314.641600414113, 2663.4756303275653, 3494.9961687832883, 3533.666093574062, 3322.0853559756647, 3514.452024107373, 2977.0431375654125, 3111.859596672044, 3212.84012314754, 3225.4575499293896, 2754.119739524873, 2667.7366388798423, 141.33797341153405, 214.19412208794805, 151.5299031121284, 123.25986619295996, 121.51806171800507, 117.74703183849843, 129.0737355875424, 115.45446429919889, 129.2462239342346, 110.25124001346383, 108.79097992512982, 96.73270025898202, 92.35035243866731, 90.91663342384707, 86.68751950368949, 84.32349577860573, 87.43228722189522, 81.64352018567654, 96.96667399442372, 79.25009943013944, 624.4915897626057, 112.15556203807621, 73.42336033486183, 71.37888168660517, 70.35070855720636, 69.96655729657797, 66.10740074579263, 71.71433136573742, 65.14919498252033, 65.57653632879651, 746.0751309144036, 449.9096476890322, 580.3805546319123, 1048.5827854636734, 160.6400335444984, 1047.2335712800032, 1064.2011908207942, 1104.8313083294206, 1086.3172632626045, 1103.579325521859, 1061.2770344884236, 1151.3531433220405, 1310.6516930926298, 1103.1219143131686, 355.91883072115104, 439.87128114678853, 586.9741360599362, 272.3926408159806, 3501.5412100642097, 477.93891097528376, 211.92666406479907, 2136.8497153303697, 3708.9679167135205, 827.7139842230762, 544.4644409957203, 2438.772263754152, 980.202672879209, 877.1563680235112, 575.4268507945833, 404.05677945223664, 547.1139673635342, 4396.862380420211, 840.0426134972646, 1736.3747496631586, 1949.101081671042, 8643.23670223051, 5123.39675332691, 2083.853232695461, 5615.139227127689, 4618.844017092667, 3896.331289655263, 17917.404940915432, 4907.2554125979605, 2652.1661595916435, 3477.4582923299495, 4217.112373109742, 5564.898664203827, 3643.438092101485, 4065.2568909065008, 3904.594009706486, 2207.9186362166943, 4061.9480464794906, 2272.5544818865574, 2982.518750101079, 2109.467802283758, 3601.9119342080835, 3465.257529759442, 4507.420295809807, 3459.89228181134, 2620.878270910683, 2568.3593558121383, 2229.3844380418436, 2226.383664759395, 2221.8672730653766, 346.7471976929329, 301.88161570672054, 213.53807134540867, 193.29135559263716, 215.7075892348739, 271.5006861778827, 151.88604955248832, 126.01733475262152, 128.47808950115396, 388.59025316070665, 114.61245474979214, 114.33068524509757, 110.91581052289209, 111.50842482948781, 111.20910916135598, 127.3506327882008, 113.79247666829653, 106.53894740360165, 109.35433872764995, 109.5804717464814, 101.65696937068383, 111.20108294870452, 106.43271316825818, 240.0571828713921, 95.2943812681487, 97.0234883514821, 91.8264262457607, 89.35475248185185, 131.94993665811737, 159.86584060967246, 456.6309929542305, 281.75172710690725, 353.23645899697374, 229.47789824698603, 208.630321070032, 592.2397780567359, 783.6517165364503, 569.127820099503, 682.077355092309, 237.52115213631467, 419.38650500658883, 419.8335745186294, 445.6213013614797, 325.4927977793046, 484.16609887435345, 378.63737077872395, 211.64060314348208, 224.3266476171455, 1056.1931174226677, 605.1906559900495, 562.7894473855964, 414.7268414929055, 2651.2375818925784, 2060.315449178859, 3773.9284707316847, 1048.822634773623, 615.8018771565393, 1783.4454055649558, 872.0815190153794, 2407.9535038796907, 4173.328969886359, 16854.630846011794, 4676.629012719091, 656.764174127745, 2642.138486566484, 2984.1925694269503, 14728.682815374765, 839.5006077545618, 2446.573072453543, 2630.579225571685, 2750.0267739116853, 4822.411458907549, 2047.9863450036087, 1461.6846178407743, 2067.5793083791027, 2121.0167592456805, 1250.3746147119841, 3748.2395409913543, 2670.6001309012076, 2677.4004684313677, 1744.0352918624242, 1912.1504275504215, 2780.815956799636, 2131.348041262654, 1423.049901499926, 2411.0636770610545, 1761.0539763911752, 1647.2620993219891, 1531.092359451444, 1756.5946420960167, 1744.8818837289896, 451.5304229685267, 171.06941482833508, 161.39899552543355, 178.9845744406737, 376.12432867065144, 1265.8935606350083, 137.88504935049795, 344.1668207731411, 124.85021417402133, 129.68434184829468, 115.92183259099434, 196.63681778548246, 196.63681778548246, 322.31648507220456, 105.80753084432406, 105.76526578414749, 105.93258022592981, 100.31107632918834, 101.51219644274427, 332.52117111526036, 96.53370060595833, 102.77888332786274, 95.70905628071272, 375.6697937172809, 93.17678016848183, 89.05904683228408, 89.38017974931694, 86.40395847000266, 103.81368211878471, 121.1883643424587, 840.9964606324945, 514.8000994870646, 388.0149965032585, 478.12853724725915, 277.774924006596, 238.5221510152605, 227.91302503945406, 203.28137030553808, 233.29932696020927, 268.3349397077686, 441.19215717307515, 347.9749622821984, 1626.3904590960474, 2012.8279642362972, 325.9811783606972, 411.33669571884536, 205.30752153811318, 1589.7824564817363, 1289.9199353827203, 965.3818950450886, 477.91954316290355, 3970.2613731838883, 622.1644752699973, 7822.272404806021, 1186.0579040422397, 1071.4611537422868, 780.7386740515253, 1385.9548497368348, 1442.1244143011409, 2186.7899901655414, 1290.7073220590742, 977.6343509564963, 6257.584961091163, 1699.1399701259757, 1660.2003328290575, 1421.5877975174114, 903.367270236805, 1112.26676783398, 6813.178380900253, 918.8496423274439, 789.5292211506472, 1396.7279553648623, 2215.231249952523, 16202.745512163778, 2696.3649030193706, 1788.7518497995454, 6433.161401507962, 2656.3439157781872, 2001.528233658615, 5041.500653654548, 4291.523165720547, 3041.899782007962, 9157.860851048354, 2005.2901271770165, 2322.10609117252, 2206.8858711251196, 3436.5177454736745, 1857.6733987529926, 3539.8031404749668, 1774.5444336176706, 1973.9149216247833, 2366.397114411715, 2453.289143900645, 2204.8211868695885, 1830.8895398318616, 2137.812280857003, 2034.515177503646, 1851.4040780088405], \"Total\": [44575.0, 37048.0, 62704.0, 9646.0, 14609.0, 8877.0, 11499.0, 23401.0, 17126.0, 22295.0, 4560.0, 12680.0, 16757.0, 16193.0, 16997.0, 5059.0, 9189.0, 7162.0, 10079.0, 5301.0, 4431.0, 14881.0, 3976.0, 5985.0, 3294.0, 11972.0, 5921.0, 2637.0, 21730.0, 2144.0, 221.1230861270685, 226.014456938931, 171.0497351411834, 154.40933447905516, 144.97508869231453, 134.78715866789142, 126.63746705244013, 120.88529373480524, 117.82215985822727, 117.94921811588958, 113.6834962481134, 118.28773632189397, 113.65485142253861, 113.3171796740214, 108.41548652967633, 108.4383992681194, 109.64296872214072, 106.0817588110831, 107.13666735453815, 109.90327704743919, 130.9501784081851, 100.95990953038378, 98.70680553930849, 97.66446238020781, 105.14752784127938, 96.87376370145546, 94.3297079722608, 94.20022473846518, 137.8171720663415, 133.22496419536606, 808.2377824787072, 276.5300177504778, 3267.9383418011093, 236.14269003252025, 210.47514039138557, 119.65196051839241, 339.9519728587514, 240.2868254984338, 560.1520116482519, 152.54733119409102, 2510.7294027752528, 1300.4693784745318, 207.078813490458, 605.4303168770581, 197.14340722150286, 790.3873546654908, 14881.810423273768, 3880.464178912793, 281.52386022006397, 561.4523654967478, 4829.21704641301, 475.66057367943563, 481.2245066289576, 3903.8682235052197, 7242.368609870428, 1177.4977404545937, 4822.501633428965, 1137.8448009651358, 6396.878002289042, 7484.246824609023, 1875.230958132319, 11720.299762683455, 2803.886852625476, 6975.578989842624, 3897.8402135626766, 7200.014326624621, 2260.504764840187, 8913.863581465761, 11972.9187518023, 11682.944748853562, 2553.4526577475503, 5426.797706001256, 9616.857908507558, 17531.49893250237, 7375.257364472611, 2869.350477761992, 6976.694371501685, 11424.065214953942, 7928.906820926762, 10886.345531855492, 13154.293913326479, 18434.04503343128, 13335.905338392005, 17602.476420342235, 17350.950718968154, 14113.544716649596, 7666.793518772894, 10819.162361370694, 62704.087455645116, 12968.35771368731, 24718.028358609783, 44575.64817499101, 37048.19511993494, 447.9365111919145, 223.2181553488489, 211.5546305095573, 144.71915935415714, 130.27502408147268, 107.7169693584699, 102.19526045620958, 104.1329058444406, 104.75965214888946, 102.922466536113, 129.69947000309574, 126.22415744050306, 90.83819485949651, 110.21076812133109, 97.01240505458075, 87.52195312819102, 84.17639471894981, 86.87248921793481, 81.51088548509321, 80.07725518957572, 79.61079433553547, 83.87455567622139, 370.5503253143598, 78.27129531771973, 77.35264534318999, 79.33270885205435, 77.19789079547822, 76.75640309603496, 90.78757975466488, 77.9389143794624, 582.1790628205498, 582.137817148421, 591.011304620456, 581.5381383252911, 581.8888418166098, 585.179624437734, 551.2232746111224, 200.96030193399227, 442.3379166375379, 130.81133079448378, 922.3841610893069, 276.29508576336104, 3005.6603967122587, 197.35047787387722, 394.3477027080573, 258.40509628865954, 425.0519632526151, 37048.19511993494, 265.10560948564597, 14609.73588856801, 218.25635953025358, 4508.946908501674, 17126.353888924743, 565.2683372168916, 629.026578677496, 23401.368762470094, 2427.9867129370523, 22295.687554172022, 2952.666079163162, 1134.623754392264, 1822.0060278756514, 2719.2105043447855, 1432.784203801251, 10257.704711061953, 2117.5823969830235, 7738.501733291151, 24718.028358609783, 5442.960558653708, 1458.47771364562, 1463.6207292882955, 6957.024337263916, 3397.8307451994333, 18434.04503343128, 21730.83570568877, 16997.336845131944, 3707.2858648231995, 2182.2126688118324, 1312.2772981315002, 17350.950718968154, 9804.30595431253, 17602.476420342235, 62704.087455645116, 5449.60985725463, 3412.0952113774065, 13312.690505955728, 6073.577645325521, 10610.177639370224, 10886.345531855492, 9719.593779945804, 14113.544716649596, 9268.252131744968, 10819.162361370694, 13154.293913326479, 16193.130887137238, 9769.980191723122, 16757.8647138627, 142.19296448172807, 215.60510836587866, 152.5428420918373, 124.10796452604129, 122.38203522831475, 118.59961886872443, 130.038116629805, 116.31833238863605, 130.21586779153083, 111.1139708765178, 109.65953329569075, 97.58398860560719, 93.19924422300551, 91.79048932772973, 87.52946012318411, 85.16655474713656, 88.3139990098567, 82.49250003911666, 97.98446003176153, 80.09359017922507, 631.3501025372198, 113.44054697061802, 74.29860374895105, 72.23655240345009, 71.20192964493323, 70.85922650471552, 66.95210401488023, 72.64835264302194, 66.00281267021545, 66.44482033815504, 757.6162058935886, 457.60246578597855, 592.4037679588907, 1083.086915199095, 162.96042485336667, 1083.1659793380356, 1101.2426141688152, 1145.2008096296374, 1125.8658679359348, 1144.4734676151088, 1100.280557728999, 1219.8083528079842, 1393.3687533665875, 1171.1882784973154, 369.80061517920217, 460.48010709826207, 620.5359322319104, 282.5288437904037, 3976.231192880868, 504.82946779991215, 218.75910812207255, 2451.781573374372, 4431.284586918357, 918.9744235692376, 591.4529920962099, 2909.1756458018413, 1103.886235037381, 984.7855709209151, 635.0122921460387, 436.541436297696, 606.312485333271, 5985.719758318096, 976.3332438669038, 2233.8052815811147, 2684.5882243011374, 16193.130887137238, 9422.891956523194, 3164.57914964578, 10997.75022391432, 9479.474907462043, 7771.190061371097, 62704.087455645116, 12023.197214667516, 5993.366516539898, 9313.00882337199, 13312.690505955728, 21730.83570568877, 10610.177639370224, 13335.905338392005, 14113.544716649596, 4767.988230652458, 17531.49893250237, 5449.60985725463, 9769.980191723122, 4857.911696501613, 16757.8647138627, 16997.336845131944, 44575.64817499101, 24718.028358609783, 12680.68634061572, 17602.476420342235, 7362.905999715368, 7575.759930045862, 7416.120045115762, 347.641904833338, 303.09277483130364, 214.41288133193106, 194.16015346399146, 216.78913766527907, 273.0112834818822, 152.7335747577486, 126.8625659234214, 129.34172776887382, 391.2280711345189, 115.44253826429008, 115.16073686689988, 111.74510971699647, 112.35101328402912, 112.05235201547897, 128.31672869693807, 114.67677272341561, 107.37155685457977, 110.22649720917418, 110.45618418381586, 102.51568988553379, 112.14343166936558, 107.3572122330269, 242.1530602489189, 96.15058136495469, 97.90333785729203, 92.66282927757415, 90.19900224177036, 133.20035791785747, 161.40638252737506, 464.4898852652539, 285.2522860373636, 359.13711014016314, 232.50930080117075, 212.80681437158444, 618.299156012364, 826.2995131244198, 594.488246190011, 718.0375279181549, 244.28861514954957, 440.5813154881326, 441.7008233423082, 472.96712306754205, 341.33220959579484, 519.9353452334668, 403.1691077743006, 218.88554458318228, 232.8588888324521, 1198.6436105151108, 663.8823977059233, 615.0247319461146, 446.86900072005, 3294.100861994846, 2547.956381921182, 5059.121217714739, 1250.678923702109, 713.140922613057, 2492.1465846464394, 1107.8819657531033, 3664.6765977812092, 7162.089939086152, 44575.64817499101, 9189.587619450967, 831.467399297631, 4989.410684847987, 5921.467439665176, 62704.087455645116, 1176.9377434638538, 5301.589510999301, 6212.514160261649, 7129.146107362104, 16997.336845131944, 5291.981253128826, 3210.175353326937, 5816.209523906723, 6422.064101708053, 2647.538659823328, 21730.83570568877, 11972.9187518023, 12680.68634061572, 6465.23316313957, 8877.383845042026, 23401.368762470094, 12968.35771368731, 4450.3535208465155, 22295.687554172022, 8913.863581465761, 7771.190061371097, 6957.024337263916, 17350.950718968154, 24718.028358609783, 452.7234335881157, 171.9854253710888, 162.37685532065035, 180.1081708389719, 378.654544216429, 1274.4529266313325, 138.8299620842307, 346.55052358615615, 125.720034765188, 130.62994241999772, 116.7836652821958, 198.10126185098633, 198.10126185098633, 324.863182389374, 106.67449504688207, 106.63509987993798, 106.82332228641171, 101.16949669154157, 102.3882546859767, 335.3945501054906, 97.3771685450383, 103.69318275939015, 96.56700404955093, 379.064681856409, 94.03947708261843, 89.93066468160511, 90.2556157406551, 87.26000463619474, 104.85635237720653, 122.42259444692597, 853.9934651346458, 520.5893343187671, 391.9934622876015, 485.2918025715811, 280.61196006299554, 241.04995517220232, 231.22172507301963, 206.06037356045712, 236.86972371784503, 273.3027955561124, 452.90680698749594, 355.57324917565796, 1721.0647459706436, 2144.6066212541195, 334.73486947556796, 426.4381775205043, 209.5800656522652, 1742.0935443148142, 1402.2127757975836, 1041.7423255414608, 500.9032876270558, 4560.1015253172245, 663.7837855400371, 9646.02821398279, 1320.6749166152176, 1186.6355170892327, 849.0271700620737, 1594.5141407617152, 1669.469153345135, 2637.875503191961, 1488.077542291741, 1120.303418884866, 8877.383845042026, 2087.9706535652613, 2041.998668833994, 1721.9658490819324, 1047.1517921361663, 1337.5559624742182, 11499.887358403717, 1086.0682440300175, 915.2391308550799, 1844.799181918294, 3462.6099756810795, 44575.64817499101, 4570.41702518799, 2695.4649856067895, 16757.8647138627, 4853.158785602595, 3293.437863782461, 12680.68634061572, 10079.880851924121, 6596.038675946471, 62704.087455645116, 3970.9541355491865, 5301.589510999301, 4919.203761467738, 12968.35771368731, 3723.0257463506755, 24718.028358609783, 3753.292034756335, 6061.400092334106, 13312.690505955728, 22295.687554172022, 16193.130887137238, 4550.981660209895, 21730.83570568877, 17350.950718968154, 17602.476420342235], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -8.8299, -8.8086, -9.0883, -9.1907, -9.254, -9.3273, -9.3902, -9.4368, -9.4625, -9.4615, -9.4985, -9.4588, -9.4988, -9.5019, -9.5463, -9.5462, -9.5352, -9.5683, -9.5584, -9.533, -9.3581, -9.6182, -9.641, -9.6517, -9.5781, -9.6603, -9.687, -9.6884, -9.3081, -9.342, -7.5397, -8.6119, -6.1689, -8.7728, -8.8899, -9.4501, -8.4185, -8.7666, -7.9484, -9.2141, -6.5091, -7.1506, -8.9197, -7.8899, -8.9674, -7.6543, -4.8857, -6.1599, -8.6404, -7.9945, -5.9957, -8.1573, -8.1468, -6.2062, -5.651, -7.3246, -6.0506, -7.3674, -5.8063, -5.6749, -6.923, -5.2795, -6.5695, -5.768, -6.2888, -5.7538, -6.7827, -5.5814, -5.3274, -5.3547, -6.681, -6.05, -5.569, -5.1063, -5.8553, -6.6237, -5.9291, -5.5556, -5.8389, -5.635, -5.5204, -5.2934, -5.5488, -5.3857, -5.4328, -5.572, -5.9539, -5.7931, -5.17, -5.8115, -5.7881, -5.7195, -5.758, -7.924, -8.6221, -8.6773, -9.0586, -9.1646, -9.3549, -9.4077, -9.389, -9.3831, -9.4013, -9.1703, -9.1975, -9.5267, -9.3334, -9.4615, -9.5645, -9.6036, -9.5723, -9.6361, -9.6539, -9.6599, -9.6077, -8.1221, -9.677, -9.6889, -9.6637, -9.6911, -9.6969, -9.529, -9.6817, -7.6775, -7.6784, -7.6647, -7.6807, -7.6802, -7.6748, -7.7349, -8.7347, -7.9578, -9.165, -7.2425, -8.4294, -6.0921, -8.7612, -8.0834, -8.4984, -8.0129, -3.7364, -8.4863, -4.6481, -8.6802, -5.8102, -4.578, -7.7858, -7.687, -4.3668, -6.4518, -4.4971, -6.3179, -7.1815, -6.7691, -6.4413, -7.0066, -5.2955, -6.6838, -5.6013, -4.6886, -5.9493, -7.0183, -7.0187, -5.7989, -6.3589, -5.0909, -5.0265, -5.2111, -6.3767, -6.7517, -7.1105, -5.3524, -5.748, -5.3976, -4.6059, -6.1702, -6.4788, -5.6566, -6.139, -5.8673, -5.8563, -5.9181, -5.8618, -6.0277, -5.9834, -5.9515, -5.9476, -6.1056, -6.1374, -8.848, -8.4323, -8.7784, -8.9848, -8.9991, -9.0306, -8.9388, -9.0503, -8.9374, -9.0964, -9.1097, -9.2272, -9.2735, -9.2892, -9.3368, -9.3645, -9.3283, -9.3968, -9.2248, -9.4265, -7.3622, -9.0792, -9.5029, -9.5311, -9.5456, -9.5511, -9.6079, -9.5264, -9.6225, -9.6159, -7.1843, -7.6901, -7.4355, -6.8439, -8.72, -6.8452, -6.8292, -6.7917, -6.8086, -6.7928, -6.8319, -6.7504, -6.6209, -6.7932, -7.9244, -7.7127, -7.4242, -8.1919, -5.6382, -7.6297, -8.4429, -6.132, -5.5806, -7.0805, -7.4993, -5.9999, -6.9114, -7.0225, -7.444, -7.7976, -7.4945, -5.4105, -7.0657, -6.3396, -6.224, -4.7346, -5.2576, -6.1572, -5.1659, -5.3612, -5.5313, -4.0056, -5.3007, -5.916, -5.6451, -5.4522, -5.1749, -5.5985, -5.4889, -5.5292, -6.0993, -5.4897, -6.0705, -5.7986, -6.1449, -5.6099, -5.6486, -5.3857, -5.6501, -5.9279, -5.9481, -6.0897, -6.091, -6.093, -7.6424, -7.781, -8.1272, -8.2268, -8.1171, -7.887, -8.4679, -8.6546, -8.6352, -7.5285, -8.7494, -8.7519, -8.7822, -8.7769, -8.7796, -8.6441, -8.7566, -8.8225, -8.7964, -8.7943, -8.8694, -8.7797, -8.8235, -8.0101, -8.934, -8.916, -8.9711, -8.9984, -8.6086, -8.4167, -7.3671, -7.85, -7.6239, -8.0552, -8.1504, -7.1071, -6.827, -7.1469, -6.9659, -8.0207, -7.4522, -7.4511, -7.3915, -7.7057, -7.3086, -7.5544, -8.1361, -8.0779, -6.5286, -7.0855, -7.1581, -7.4634, -5.6082, -5.8604, -5.2551, -6.5356, -7.0681, -6.0047, -6.7201, -5.7045, -5.1545, -3.7586, -5.0407, -7.0037, -5.6117, -5.4899, -3.8934, -6.7582, -5.6886, -5.616, -5.5716, -5.01, -5.8664, -6.2037, -5.8569, -5.8313, -6.3598, -5.262, -5.6009, -5.5984, -6.027, -5.935, -5.5605, -5.8265, -6.2304, -5.7032, -6.0173, -6.0841, -6.1573, -6.0199, -6.0266, -7.3721, -8.3427, -8.4009, -8.2975, -7.5548, -6.3412, -8.5583, -7.6436, -8.6576, -8.6197, -8.7318, -8.2034, -8.2034, -7.7092, -8.8231, -8.8235, -8.822, -8.8765, -8.8646, -7.6781, -8.9149, -8.8522, -8.9234, -7.5561, -8.9503, -8.9955, -8.9919, -9.0257, -8.8422, -8.6874, -6.7502, -7.241, -7.5237, -7.3149, -7.858, -8.0103, -8.0558, -8.1702, -8.0324, -7.8925, -7.3953, -7.6326, -6.0906, -5.8775, -7.6979, -7.4653, -8.1603, -6.1134, -6.3224, -6.6122, -7.3153, -5.1982, -7.0516, -4.52, -6.4064, -6.508, -6.8245, -6.2506, -6.2109, -5.7946, -6.3218, -6.5996, -4.7432, -6.0469, -6.0701, -6.2252, -6.6786, -6.4706, -4.6581, -6.6616, -6.8133, -6.2429, -5.7816, -3.7918, -5.5851, -5.9955, -4.7155, -5.6001, -5.8831, -4.9593, -5.1204, -5.4645, -4.3624, -5.8812, -5.7345, -5.7854, -5.3425, -5.9577, -5.3129, -6.0035, -5.897, -5.7156, -5.6796, -5.7864, -5.9722, -5.8172, -5.8667, -5.9611], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.229, 1.2284, 1.2273, 1.2272, 1.227, 1.2266, 1.2261, 1.2259, 1.2259, 1.2258, 1.2256, 1.2256, 1.2256, 1.2255, 1.2253, 1.2251, 1.2251, 1.2251, 1.2251, 1.225, 1.2247, 1.2246, 1.2244, 1.2243, 1.2241, 1.2238, 1.2238, 1.2237, 1.2236, 1.2236, 1.223, 1.2234, 1.1968, 1.2203, 1.2183, 1.2229, 1.2103, 1.2092, 1.181, 1.216, 1.1202, 1.1365, 1.2048, 1.1617, 1.2063, 1.1307, 0.964, 1.0339, 1.1769, 1.1325, 0.9794, 1.1356, 1.1345, 0.9817, 0.9189, 1.0618, 0.9259, 1.0533, 0.8877, 0.8621, 0.9981, 0.809, 0.9493, 0.8394, 0.9006, 0.822, 0.9515, 0.7808, 0.7397, 0.737, 0.9313, 0.8085, 0.7173, 0.5795, 0.6964, 0.872, 0.6781, 0.5585, 0.6404, 0.5273, 0.4527, 0.3422, 0.4106, 0.296, 0.2634, 0.3307, 0.559, 0.3754, -0.7586, 0.1758, -0.4458, -0.9669, -0.8204, 1.4289, 1.4273, 1.4258, 1.4242, 1.4233, 1.4232, 1.423, 1.4229, 1.4227, 1.4223, 1.4221, 1.422, 1.4218, 1.4217, 1.4212, 1.4211, 1.421, 1.4208, 1.4207, 1.4207, 1.4205, 1.4205, 1.4205, 1.4204, 1.4202, 1.4202, 1.4201, 1.4201, 1.42, 1.4199, 1.4132, 1.4125, 1.4111, 1.4112, 1.4111, 1.4108, 1.4105, 1.4198, 1.4077, 1.4188, 1.3881, 1.4067, 1.3572, 1.4113, 1.397, 1.4047, 1.3925, 1.2012, 1.3911, 1.22, 1.3917, 1.2336, 1.1312, 1.3344, 1.3264, 1.0302, 1.211, 0.9484, 1.1492, 1.242, 1.1808, 1.1082, 1.1836, 0.9263, 1.1157, 0.9023, 0.6537, 0.9062, 1.1541, 1.1501, 0.8111, 0.9678, 0.5447, 0.4446, 0.5056, 0.8629, 1.0178, 1.1676, 0.3438, 0.519, 0.2842, -0.1945, 0.684, 0.8437, 0.3044, 0.6068, 0.3207, 0.306, 0.3576, 0.0409, 0.2955, 0.1851, 0.0216, -0.1824, 0.1649, -0.4065, 1.6524, 1.6519, 1.6518, 1.6516, 1.6513, 1.6512, 1.651, 1.651, 1.651, 1.6506, 1.6505, 1.6497, 1.6493, 1.6489, 1.6488, 1.6485, 1.6484, 1.6481, 1.648, 1.6478, 1.6475, 1.647, 1.6466, 1.6465, 1.6464, 1.6458, 1.6457, 1.6455, 1.6454, 1.6453, 1.6431, 1.6415, 1.6379, 1.6261, 1.6441, 1.6247, 1.6242, 1.6225, 1.6227, 1.622, 1.6223, 1.6007, 1.5972, 1.5986, 1.6202, 1.6126, 1.6028, 1.6219, 1.5313, 1.6037, 1.6267, 1.5209, 1.4805, 1.5538, 1.5757, 1.4821, 1.5396, 1.5427, 1.5599, 1.5811, 1.5557, 1.3499, 1.5081, 1.4065, 1.3383, 1.0306, 1.0491, 1.2406, 0.9862, 0.9394, 0.968, 0.4058, 0.7623, 0.8432, 0.6733, 0.5089, 0.2962, 0.5895, 0.4704, 0.3734, 0.8886, 0.1961, 0.7838, 0.4719, 0.8243, 0.121, 0.0682, -0.633, -0.3079, 0.0819, -0.2663, 0.4637, 0.4339, 0.4531, 1.964, 1.9626, 1.9625, 1.9621, 1.9616, 1.961, 1.961, 1.9599, 1.9599, 1.9598, 1.9594, 1.9593, 1.9591, 1.959, 1.959, 1.959, 1.9588, 1.9588, 1.9586, 1.9586, 1.9582, 1.9581, 1.9579, 1.9579, 1.9576, 1.9575, 1.9575, 1.9572, 1.9571, 1.957, 1.9495, 1.9542, 1.95, 1.9534, 1.9467, 1.9235, 1.9136, 1.923, 1.9152, 1.9385, 1.9173, 1.9158, 1.907, 1.9191, 1.8953, 1.9038, 1.9329, 1.9292, 1.84, 1.874, 1.8778, 1.8919, 1.7495, 1.7541, 1.6735, 1.7906, 1.8198, 1.632, 1.7272, 1.5466, 1.4265, 0.994, 1.2911, 1.7307, 1.3308, 1.2813, 0.5179, 1.6287, 1.1933, 1.1072, 1.014, 0.7068, 1.0172, 1.1798, 0.9323, 0.8587, 1.2164, 0.2091, 0.4662, 0.4113, 0.6563, 0.4313, -0.1635, 0.1608, 0.8264, -0.2578, 0.3449, 0.4153, 0.4528, -0.3237, -0.6843, 1.9702, 1.9675, 1.9668, 1.9665, 1.9661, 1.9661, 1.966, 1.9659, 1.9659, 1.9655, 1.9654, 1.9654, 1.9654, 1.9649, 1.9646, 1.9646, 1.9644, 1.9643, 1.9642, 1.9642, 1.9641, 1.9639, 1.9639, 1.9638, 1.9636, 1.9631, 1.9631, 1.9629, 1.9628, 1.9627, 1.9575, 1.9616, 1.9626, 1.9579, 1.9626, 1.9623, 1.9584, 1.9592, 1.9576, 1.9545, 1.9466, 1.9512, 1.9162, 1.9094, 1.9463, 1.9367, 1.9522, 1.8813, 1.8893, 1.8967, 1.9258, 1.8343, 1.9081, 1.7632, 1.8653, 1.8707, 1.889, 1.8326, 1.8264, 1.7853, 1.8305, 1.8366, 1.6231, 1.7667, 1.7658, 1.7811, 1.8251, 1.7884, 1.4493, 1.8056, 1.8251, 1.6946, 1.5261, 0.9608, 1.4451, 1.5628, 1.0154, 1.3701, 1.4748, 1.0504, 1.1189, 1.1988, 0.049, 1.2896, 1.1473, 1.1712, 0.6448, 1.2776, 0.0293, 1.2237, 0.8509, 0.2455, -0.2342, -0.0211, 1.0623, -0.3461, -0.1706, -0.2793]}, \"token.table\": {\"Topic\": [5, 1, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 4, 5, 4, 4, 5, 4, 1, 2, 3, 4, 5, 3, 4, 1, 2, 3, 4, 5, 5, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 5, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 2, 5, 5, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 4, 5, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 3, 4, 5, 1, 2, 3, 4, 5, 2, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 1, 2, 3, 4, 5, 2, 5, 3, 3, 4, 5, 1, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 4, 2, 1, 2, 3, 4, 5, 2, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 3, 5, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5, 1, 2, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 5, 2, 1, 2, 3, 4, 5, 4, 1, 2, 3, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 4, 3, 5, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 1, 2, 1, 2, 3, 4, 5, 1, 2, 2, 3, 4, 5, 1, 3, 4, 5, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 4, 3, 1, 1, 2, 3, 4, 5, 2, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 3, 4, 5, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 3, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 4, 1, 2, 3, 4, 5, 1, 5, 1, 3, 4, 5, 2, 1, 2, 3, 4, 5, 1, 3, 4, 5, 4, 1, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 1, 5, 1, 2, 3, 4, 5, 3, 4, 5, 1, 2, 3, 4, 5, 3, 5, 1, 2, 3, 4, 5, 2, 5, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 4, 5, 4, 1, 2, 3, 4, 5, 4, 1, 1, 1, 2, 4, 5, 5, 3, 1, 3, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 5, 3, 1, 2, 3, 4, 5, 3, 4, 5, 3, 3, 5, 3, 2, 1, 2, 3, 4, 5, 2, 3, 4, 5, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 4, 1, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 5, 1, 2, 3, 4, 2, 3, 4, 5, 1, 3, 5, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5, 1, 2, 3, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 4, 5, 5, 1, 1, 2, 3, 4, 5, 4, 2, 2, 1, 4, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5, 3, 4, 4, 5, 4, 5, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 5, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5, 1, 2, 5, 1, 2, 3, 4, 5, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 4, 1, 2, 3, 4, 5, 5, 1, 2, 4, 5, 1, 2, 3, 4, 5, 3, 4, 5, 1, 5, 1, 1, 2, 3, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 3, 4, 1, 2, 3, 4, 5, 4, 2, 3, 4, 5, 4, 1, 4, 3, 2, 1, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 5, 1, 2, 4, 5, 3, 4, 1, 2, 3, 4, 5, 3, 1, 2, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 1, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 5, 1, 2, 3, 5, 2, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 4, 5, 1, 1, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 4, 1, 1, 3, 4, 1, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 4, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 3, 4, 5, 5, 5, 3, 1, 2, 3, 4, 5, 3, 4, 5, 1, 2, 3, 4, 5, 2, 5, 2, 1, 2, 3, 4, 5, 1, 2, 4, 3, 5, 1, 2, 3, 4, 5, 2, 1, 3, 2, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 3, 1, 2, 3, 4, 5, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 3, 5, 1, 3, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 3, 4], \"Freq\": [0.9942702972129029, 0.9893904917652826, 0.00046628597995058957, 0.060617177393576645, 0.9386336776405367, 0.06630871606709447, 0.11133315290277591, 0.13070730451085702, 0.6570839024261873, 0.03465517259473662, 0.027113235811342253, 0.0512138898658687, 0.003012581756815806, 0.9113059814367813, 0.007531454392039515, 0.037385155029953654, 0.1971217265215738, 0.03313684195836801, 0.7137165960263879, 0.018692577514976827, 0.9913881129350193, 0.996166592740044, 0.9941283872775013, 0.9899207238640594, 0.012665189763017354, 0.9836630715943478, 0.9981535458631038, 0.0036589453758246967, 0.0036589453758246967, 0.007317890751649393, 0.007317890751649393, 0.9805973607210188, 0.9846674268538282, 0.014519224792750819, 0.007894561075040024, 0.003727987174324456, 0.028069550489031196, 0.08969098554698249, 0.8705946518863582, 0.9936770729818253, 0.0026409296158569967, 0.0026409296158569967, 0.9929895355622308, 0.020675221761020532, 0.026116069592868038, 0.9010044009539473, 0.03808593482293256, 0.015234373929173022, 0.007607499623805224, 0.9661524522232634, 0.012679166039675373, 0.010143332831740298, 0.005071666415870149, 0.00504792342389121, 0.9944409145065684, 0.18666537367220276, 0.459543125171771, 0.13997880210355906, 0.07059624556956953, 0.14321530619843906, 0.9949662049685805, 0.6546760881006004, 0.18275983066746854, 0.05332628112379451, 0.02389017394345994, 0.08532204979807122, 0.5743407675084269, 0.07353052501418093, 0.2220249186100707, 0.015050107459042882, 0.11495415411573706, 0.24048234924861372, 0.026559295599746496, 0.09577442958696464, 0.42350004074504866, 0.21376208822098997, 0.013172294511002549, 0.7788119129630257, 0.08452222311226636, 0.05049379562550977, 0.07354531101976423, 0.9861531047541322, 0.007644597711272343, 0.008329074673570773, 0.0030287544267530078, 0.018172526560518047, 0.07269010624207219, 0.8980256875322669, 0.13796862537231205, 0.07511185908521287, 0.026289150679824503, 0.7459793583884036, 0.014627046242909874, 0.32287189966237384, 0.27455991467609875, 0.29383190868701725, 0.07801197575652614, 0.03075599044208222, 0.1970732561264754, 0.09965093565038254, 0.5436759779945791, 0.08065464440286553, 0.07885052735701195, 0.39193348908720577, 0.3175689526014611, 0.14588856355644939, 0.03936946049245305, 0.1051556585447772, 0.99232774474073, 0.9901454072165344, 0.9938471928629897, 0.9932895985041902, 0.9884402242791889, 0.1172542240166295, 0.7809968849679072, 0.004885592667359562, 0.009771185334719124, 0.08724272620284933, 0.9779978553236649, 0.004161693001377298, 0.012485079004131892, 0.004161693001377298, 0.004161693001377298, 0.9938629829486907, 0.12974156755203578, 0.7408465387489783, 0.02242158503149493, 0.0360263488657093, 0.07100168593306729, 0.11742786204513579, 0.6292249850939857, 0.015598187188952875, 0.11065883741596756, 0.12713994086089891, 0.9943049302979263, 0.0051121076107862535, 0.0035636399809028333, 0.0035636399809028333, 0.9906919146909876, 0.08974383319007168, 0.00560898957437948, 0.00560898957437948, 0.8637843944544399, 0.035056184839871746, 0.13930945132117256, 0.6170700036306156, 0.025475778606061174, 0.10813750390706602, 0.1100212762687818, 0.011535263373012505, 0.005662765655842503, 0.46308839141112024, 0.2000843865064351, 0.3196316614631102, 0.05011390038945341, 0.03374503845319978, 0.3298955251768038, 0.08134065239092186, 0.5049164335721311, 0.9739103260210781, 0.02028979845877246, 0.00439005200459121, 0.005017202290961384, 0.028221762886657783, 0.0928182423827856, 0.8692302969090597, 0.0025281562508417703, 0.00337087500112236, 0.00421359375140295, 0.08764275002918137, 0.902551781550512, 0.009818768571597544, 0.013389229870360286, 0.10354337766411954, 0.8729777875474907, 0.01384930404892083, 0.006463008556163054, 0.9685279964878635, 0.0018465738731894442, 0.010156156302541942, 0.9902453274844494, 0.00995221434657738, 0.011551979657233034, 0.00837518525149395, 0.21862121501313517, 0.12158458589237768, 0.6396908735192792, 0.13570287303151368, 0.6035463268233485, 0.11464553066455466, 0.09388065138602562, 0.0521559174366809, 0.989974520146024, 0.06133408564387069, 0.020647117939520825, 0.22924373594615036, 0.08107030132135383, 0.6078754428664808, 0.9779555746672297, 0.015201381989646058, 0.9940297598098842, 0.979061969842583, 0.0185684166694283, 0.0016880378790389361, 0.9941599876748576, 0.9968783389849496, 0.10824236774168908, 0.006013464874538282, 0.04931041197121391, 0.7901692845143302, 0.04570233304649094, 0.08911137521447837, 0.19623462414252152, 0.6585393827906841, 0.024331829402534873, 0.03191577622929899, 0.989738448678442, 0.9879532017229404, 0.15885078710522704, 0.15920882794768812, 0.21494385242412764, 0.08312514892471122, 0.3838794565920081, 0.0023419382953763796, 0.011709691476881898, 0.9847850532057676, 0.16810520250544655, 0.4384565663780648, 0.20136401828027536, 0.07524395450047902, 0.11673515041759218, 0.1428156135523549, 0.041795844938016614, 0.20669228223121047, 0.21110844697937825, 0.39761254750467884, 0.9891135263727621, 0.009604499497752678, 0.989263448268526, 0.029030345183802087, 0.018784341001283705, 0.9417785511098148, 0.003415334727506128, 0.0059768357731357245, 0.9860246483247758, 0.10308161607135789, 0.26822695515234585, 0.37334872820844933, 0.10834307355833345, 0.14689130290168498, 0.976608540342093, 0.017649551933893247, 0.0029415919889822077, 0.3284761048904633, 0.022916937550497438, 0.07390960378840084, 0.14900969783916515, 0.4257986838386797, 0.2148721726632897, 0.061392049332368484, 0.17523161100828355, 0.10001618632955396, 0.4486498439620439, 0.009296570647594286, 0.0122017489749675, 0.030213854604681428, 0.003486213992847857, 0.9447639920617692, 0.9834890696121004, 0.009502309851324641, 0.9913250275335773, 0.40578041271544774, 0.24898068278017868, 0.27668456637922534, 0.03521439935735595, 0.03337219737890272, 0.9980743632128525, 0.9861936193002163, 0.008357573044917087, 0.9825218283598043, 0.9889463753429296, 0.7551410758121898, 0.06945351429555584, 0.08007061202226501, 0.0628178282163626, 0.032736051324019945, 0.4243396897704343, 0.287637794503505, 0.09048759666418105, 0.10000774217634718, 0.09751217005179878, 0.9940984324258244, 0.9883581193577355, 0.009503443455362841, 0.02091207292197243, 0.002987438988853204, 0.9739051103661446, 0.01316604069392022, 0.025606394105498382, 0.09579072126915184, 0.054426546175654456, 0.8109037032113697, 0.014635739361031345, 0.028729414301283753, 0.1805074521193866, 0.018972254727262855, 0.7572639958281774, 0.01297455937175714, 0.9860665122535427, 0.0064460409014720785, 0.004834530676104059, 0.9459565022910276, 0.027395673831256333, 0.016115102253680198, 0.010816639658810828, 0.005408319829405414, 0.9626809296341637, 0.016224959488216242, 0.005408319829405414, 0.9940363176376271, 0.9939877267090583, 0.9927486190216649, 0.01131987928427544, 0.015847830997985615, 0.006791927570565264, 0.950869859879137, 0.015847830997985615, 0.9908052953681434, 0.007506100722485936, 0.0016821190434106227, 0.0033642380868212454, 0.9571257357006443, 0.0370066189550337, 0.005624720095329706, 0.011249440190659411, 0.005624720095329706, 0.9787012965873688, 0.3475382233822203, 0.12538210588406706, 0.09769934080880255, 0.16432304282838062, 0.2650297035200114, 0.994920991079045, 0.001888546549244215, 0.011708988605314134, 0.017374628253046778, 0.47213663731105376, 0.49668774245122854, 0.015099489632069876, 0.007105642179797589, 0.9645909259075226, 0.0035528210898987944, 0.010658463269696383, 0.991781163658575, 0.9964413794551535, 0.04371450846007074, 0.02732156778754421, 0.06860749244427768, 0.8047719578308855, 0.05555385450133989, 0.01909942775268564, 0.056343311870422644, 0.01909942775268564, 0.04297371244354269, 0.8623391630337567, 0.9890140669376504, 0.9968757443856626, 0.9906626756619449, 0.9941357961241442, 0.16694707681342716, 0.07160174627775875, 0.05045511654805798, 0.04711617501178944, 0.6637073787093803, 0.9891205778302874, 0.9873579780547862, 0.025862566427628905, 0.022525461082128398, 0.06257072522813445, 0.880995811212133, 0.007508487027376133, 0.008187037282828886, 0.016374074565657773, 0.004093518641414443, 0.9742574366566376, 0.004093518641414443, 0.9895641690976411, 0.998402040772703, 0.007476322696436526, 0.0007476322696436526, 0.011214484044654789, 0.1480311893894432, 0.8313670838437417, 0.015670921087462014, 0.09157694510485614, 0.04946134468230198, 0.030362409606957654, 0.8129290314120919, 0.04252848868620092, 0.044325467081392504, 0.007187913580766352, 0.04133050308940653, 0.8637476152887567, 0.9772160777092047, 0.0036193188063303877, 0.0036193188063303877, 0.01447727522532155, 0.9867071451793165, 0.18511676360669269, 0.7296056116641331, 0.03683445806459701, 0.014639335897468042, 0.03352880157162036, 0.05347113679155268, 0.53787363944621, 0.1770872057182605, 0.22006535061254612, 0.011499169202484448, 0.004300903217868026, 0.008601806435736051, 0.9849068368917778, 0.23080383282864902, 0.15245528849546439, 0.40812771448294805, 0.1220973068801646, 0.0864994544655117, 0.09824910538749483, 0.8208125034743078, 0.018629627206658162, 0.02927512846760568, 0.03304541016419126, 0.12250757086824106, 0.8275871154336572, 0.012338892029894782, 0.03437262779756404, 0.0035253977228270807, 0.9895730514555878, 0.012685871189281734, 0.016914494919042313, 0.02325743051368318, 0.9429830917366089, 0.004228623729760578, 0.011969781891201946, 0.024860316235573273, 0.041433860392622125, 0.0755017011598892, 0.8461715044626607, 0.033574994480680104, 0.08729498564976827, 0.7771492055794755, 0.08729498564976827, 0.014772997571499247, 0.9888729367236746, 0.0026536506334471246, 0.006823673057435464, 0.028811064020283068, 0.13306162461999155, 0.8290762764784089, 0.9833013716192126, 0.013110684954922836, 0.001148043976471208, 0.01951674760001054, 0.06658655063533007, 0.9126949612946105, 0.9933439516286064, 0.013344027488556807, 0.021193455423001988, 0.07613945096411825, 0.8084910772478536, 0.08084910772478536, 0.0094225488678002, 0.00235563721695005, 0.06831347929155145, 0.9198763332189945, 0.9880335474978827, 0.9706449279479858, 0.024145396217611588, 0.004705307051625988, 0.9622352920575145, 0.0070579605774389815, 0.01176326762906497, 0.014115921154877963, 0.022954425533768755, 0.008198009119203127, 0.94359084962028, 0.0016396018238406254, 0.022954425533768755, 0.9848065161218806, 0.9942382448761113, 0.9855603418605355, 0.13657264534987573, 0.40166025196998556, 0.168497393665418, 0.1484041814668179, 0.14493631743254176, 0.0030782189371075653, 0.0030782189371075653, 0.9911864977486361, 0.00907891428752099, 0.011348642859401238, 0.00907891428752099, 0.9510162716178238, 0.020427557146922227, 0.9555244476741493, 0.043432929439734064, 0.06379248134284812, 0.19915852113328675, 0.5337448366372085, 0.067127228673452, 0.1361688493329914, 0.03283008121224522, 0.9637973841594846, 0.9886661684227787, 0.7083142743035961, 0.08488515801078186, 0.062843155654391, 0.07081579480457492, 0.07316068867227608, 0.21334953402474086, 0.2860090071508525, 0.06241981764694916, 0.3857404461328319, 0.05246070067406514, 0.9959571584320842, 0.9915206183915101, 0.7307001735299244, 0.02913411500657862, 0.14166636017416903, 0.0374186974729043, 0.06116783387637123, 0.1283463333262738, 0.7945866162899785, 0.029124225795804294, 0.027369754362322106, 0.020567803574052707, 0.04741477574723874, 0.7542336113507191, 0.017272525450779827, 0.15240463633041024, 0.028448865448343245, 0.9910754666907893, 0.14894028959982553, 0.7241072351161888, 0.009561598838507318, 0.06067937724437337, 0.05700183922956286, 0.11086770921645711, 0.04641547761409343, 0.10110901769295269, 0.3781212543187747, 0.3634944339203267, 0.018078175847933847, 0.04519543961983462, 0.9370521147845712, 0.9932007845092612, 0.3091197735317323, 0.32120403692983146, 0.1658349360971283, 0.13443743030385288, 0.06926872412124682, 0.9951970301296742, 0.9904921712504615, 0.9926765803560244, 0.013705793161045959, 0.004568597720348653, 0.9685427167139145, 0.013705793161045959, 0.9942727126465337, 0.9828819017200074, 0.027427429429141136, 0.9691025064963201, 0.994944175416043, 0.003435612566448475, 0.9808673877210397, 0.005153418849672713, 0.005153418849672713, 0.005153418849672713, 0.609178606335392, 0.12325659591442525, 0.12222945761513838, 0.07044456835942499, 0.07489550098966813, 0.9081336473953189, 0.016148015745386702, 0.028451265837109906, 0.018454875137584804, 0.028451265837109906, 0.9873013044357841, 0.008815190218176644, 0.9871324683692072, 0.6543453786886335, 0.13543898995667294, 0.15755147811286446, 0.022112488156191504, 0.030588941949398245, 0.9627335614688085, 0.017697308115235448, 0.01415784649218836, 0.9939510637625437, 0.9021750553253596, 0.09730955806982855, 0.9933054173991105, 0.9899566683792608, 0.2261558700360694, 0.1460979380811523, 0.10404416059510632, 0.4554268347007348, 0.06853208182911194, 0.0007846504010495125, 0.0023539512031485374, 0.00313860160419805, 0.9933674077286828, 0.9899528962914893, 0.6903834308363987, 0.15312162023195527, 0.04703212069951855, 0.035541318483158904, 0.07402214451003772, 0.09914568954056487, 0.2163881742078787, 0.28490851814932994, 0.2697505188123949, 0.1299257086023003, 0.9898038462677263, 0.002420429842004337, 0.0012102149210021684, 0.009681719368017348, 0.9488084980657001, 0.03872687747206939, 0.22477324449728825, 0.1131140437518716, 0.5105589675777805, 0.08219862986470412, 0.06937782587031996, 0.32405683300754307, 0.21404592155066549, 0.30273373041651863, 0.09126831172718732, 0.06804378597517984, 0.9949696491716576, 0.044540855898142155, 0.0641771472080758, 0.030172837866483396, 0.04693552557008528, 0.8137087545262744, 0.02691920059957242, 0.024472000545065837, 0.8716110860800949, 0.01019666689377743, 0.06689013482317994, 0.022965923358538944, 0.020095182938721576, 0.9408851725951424, 0.0035884255247717097, 0.012200646784223813, 0.013922259379011577, 0.9829115121582174, 0.009163535964333586, 0.9621712762550265, 0.013745303946500378, 0.009163535964333586, 0.004581767982166793, 0.007544163263389148, 0.9618808160821164, 0.011316244895083722, 0.01886040815847287, 0.003772081631694574, 0.9906083897700461, 0.017309844546072792, 0.0038466321213495094, 0.9308849733665813, 0.048082901516868864, 0.03225638357936423, 0.05980871122007118, 0.016128191789682115, 0.02486429567575993, 0.8675623166866505, 0.01984279014868993, 0.012401743842931206, 0.004960697537172483, 0.9400521832941854, 0.02232313891727617, 0.03954465516667116, 0.22746773385002583, 0.17588774885001998, 0.3555580299333737, 0.20167774135002292, 0.8357906097504234, 0.0246079254185193, 0.11161451886256968, 0.009667399271561154, 0.018455944063889475, 0.9925553323942825, 0.9918330901486453, 0.0046990976438089456, 0.009398195287617891, 0.0046990976438089456, 0.9821114075560695, 0.9766289159289752, 0.002260715083168924, 0.009042860332675696, 0.011303575415844619, 0.0047714461625334055, 0.014314338487600217, 0.9781464633193482, 0.9904187769600584, 0.0026986887655587426, 0.0026986887655587426, 0.005397377531117485, 0.003251901746571112, 0.00812975436642778, 0.06016018231156557, 0.9154103416597681, 0.013007606986284448, 0.9930220269326538, 0.1967805180119023, 0.7583249230702576, 0.004799524829558592, 0.015769867297121088, 0.024683270552015617, 0.7644231230233247, 0.07122789296806648, 0.053353723600608284, 0.08023217377723714, 0.03070862932679847, 0.8197472913900818, 0.061075167576060796, 0.036078158061808065, 0.06880620144644824, 0.014431263224723226, 0.0947087890255698, 0.10912099605119999, 0.5013389158201358, 0.21193665152868676, 0.08287019039737357, 0.004178054604886826, 0.023675642761025347, 0.9498110801776052, 0.02228295789272974, 0.26970371979180724, 0.281883887782405, 0.305323034587841, 0.09385894157460617, 0.04933479807956398, 0.9931964773673657, 0.9315688102790017, 0.05946183895397883, 0.004955153246164902, 0.004955153246164902, 0.3120848031049029, 0.06113349498050587, 0.08359414368881328, 0.5039291409442804, 0.03934835450402726, 0.9926513992824795, 0.15913886622965695, 0.23061121417428762, 0.22173556312234002, 0.33026764703826067, 0.05823672795488425, 0.9955115396038355, 0.006181847672066326, 0.008242463562755101, 0.9849743957492346, 0.09097252614801739, 0.10000448747611003, 0.21557006495122302, 0.5089455798974609, 0.08466103509947073, 0.5203776377093743, 0.1513276195158358, 0.2316972448071334, 0.060234438827260685, 0.03633459993651994, 0.002981563056661097, 0.002981563056661097, 0.9928604978681452, 0.9940441760672325, 0.9973490302225823, 0.062027510820994294, 0.5892613527994458, 0.1656651434844056, 0.15946239240230617, 0.023518764519627006, 0.9940247602646924, 0.993732303580647, 0.9865473012651917, 0.9940706077908191, 0.007255989837889191, 0.990988328134991, 0.10142190640535659, 0.5664521368384278, 0.14080381687126634, 0.14296172977350796, 0.04828330118765646, 0.007190440006643153, 0.0770725288212063, 0.3152558540412608, 0.31974987904541274, 0.28065186150929056, 0.11871100482187233, 0.6696616834282079, 0.05256102805288084, 0.11883920245126961, 0.04021132308761046, 0.08810277521878097, 0.17522818209123633, 0.13641269633716166, 0.5826511584595452, 0.01759263023386118, 0.9954410693826253, 0.0035657926431001043, 0.006418426757580188, 0.00784474381482023, 0.06204479198994182, 0.919974501919827, 0.006195541863596358, 0.9912866981754174, 0.9885985627580997, 0.010517005986788295, 0.9962958180006898, 0.0036628522720613594, 0.9963598837387438, 0.6108786129446517, 0.028564463443679366, 0.08001390637147612, 0.22308678905867715, 0.057463014179097674, 0.6631931248168124, 0.13291640218841663, 0.062222098412132346, 0.1045831252328921, 0.037083259544730664, 0.9896513087621438, 0.9863460961510409, 0.004305798820264665, 0.006458698230396998, 0.004305798820264665, 0.983875030430476, 0.0021528994101323324, 0.9648284851856288, 0.008568093112971013, 0.003672039905559006, 0.001224013301853002, 0.021726236107890786, 0.9902128278965023, 0.8937641776607143, 0.03704102875331837, 0.02310085664185447, 0.022702566010098357, 0.02349914727361058, 0.00414851767670156, 0.00414851767670156, 0.9914957247316729, 0.06814723455742072, 0.25571036620307713, 0.48726327619307486, 0.041563483615516664, 0.14737103200730148, 0.9965395225191436, 0.011264579942192033, 0.04314334117859549, 0.025345304869932077, 0.2153787684947117, 0.7049374127823774, 0.0007995657247024845, 0.03038349753869441, 0.015191748769347205, 0.8387444452129063, 0.11513746435715776, 0.9928468698534055, 0.012938720556558588, 0.01455606062612841, 0.012938720556558588, 0.9574653211853354, 0.003234680139139647, 0.9933150594769705, 0.011609678149105681, 0.9752129645248772, 0.00386989271636856, 0.011609678149105681, 0.02527345048077074, 0.026176073712226838, 0.030689189869507326, 0.7870874578297173, 0.1308803685611342, 0.002638072202091366, 0.002638072202091366, 0.9919151479863537, 0.9859036140273876, 0.9951776567582619, 0.989802593554189, 0.01727874500121154, 0.020158535834746798, 0.035517420280268164, 0.9263327181205075, 0.051398519191499965, 0.18896514408639692, 0.17328103712722598, 0.3870006150889409, 0.19916926186706235, 0.13653017446519383, 0.19678143005794027, 0.2857389482411959, 0.23489696760867187, 0.14605108489104604, 0.057549478697578295, 0.17531276381021538, 0.1894337007128619, 0.10497451206873078, 0.4729181698527846, 0.004475584560077686, 0.0156645459602719, 0.008951169120155372, 0.9286837962161197, 0.04251805332073801, 0.9497421930782425, 0.02677844529355947, 0.023207985921084872, 0.04468619836949335, 0.019936919272543187, 0.8383818294091867, 0.009280979661356312, 0.08799743678915613, 0.9896264895172004, 0.025766677965714906, 0.008588892655238302, 0.9619559773866898, 0.004294446327619151, 0.9933320597305464, 0.9060220208946519, 0.0914334149526713, 0.9851212828703403, 0.9832010166885933, 0.9890864971831618, 0.027329484476111866, 0.7549770086525903, 0.01024855667854195, 0.15304511306622645, 0.05465896895222373, 0.08716420562446436, 0.11696393404308465, 0.725995883598637, 0.046934572259326963, 0.02309478952443073, 0.004852946652096624, 0.004852946652096624, 0.004852946652096624, 0.9851481703756145, 0.9448577459547154, 0.014208387157213766, 0.02486467752512409, 0.014208387157213766, 0.9833863093964746, 0.015297120368389606, 0.24961647504147635, 0.1292028937714684, 0.0766867515752423, 0.14216712971112255, 0.40233077975435144, 0.9920168281676954, 0.9961676459426985, 0.9837578346881922, 0.7908359200069036, 0.033062594093343244, 0.030929523506675934, 0.11838541756003548, 0.026663382333341323, 0.8433137201746433, 0.09341843828722131, 0.008492585298838302, 0.045010702083842995, 0.010191102358605961, 0.08183060712815735, 0.10567963433930481, 0.10611723116886715, 0.11661955507836327, 0.5898805262500326, 0.5098611290924207, 0.2859083128602164, 0.1109981634325019, 0.06899885834993362, 0.02413003552880476, 0.40465903757537625, 0.18769922702596592, 0.2996175879681726, 0.07888221825444688, 0.02912574212471885, 0.9033545334264368, 0.030364858266434848, 0.016447631560985543, 0.027834453410898612, 0.022773643699826138, 0.019616758291872538, 0.018862267588338977, 0.062056860365635236, 0.4615596878866548, 0.4379818534012311, 0.019871637743454088, 0.006623879247818029, 0.9737102494292503, 0.5849287403556913, 0.15240146132586857, 0.07701426159527879, 0.08338692056531065, 0.1022337204979581, 0.5972844825874538, 0.07871593894824208, 0.16179920872320303, 0.04908047976693562, 0.11313466522547871, 0.1177703730131541, 0.6612554406925345, 0.07148707466946319, 0.108605363440146, 0.04078429259988605, 0.9945427586436902, 0.9907731658893104, 0.43956520770466256, 0.1506459403409531, 0.30481620083921074, 0.06703706852404782, 0.03794268084247002, 0.10961932702021492, 0.1465025216379188, 0.1320789259773642, 0.06449407773933698, 0.5472724296347572, 0.674926053716183, 0.09934659201897086, 0.06723456227546512, 0.04143025266014802, 0.11697953692277088, 0.014771512681535858, 0.006462536798171938, 0.9666108610980026, 0.0018464390851919822, 0.010155414968555902, 0.9863026659866645, 0.9927439701134022, 0.991072575154443, 0.777946340943119, 0.08299460469725735, 0.04098498997395424, 0.04329039565998917, 0.054817424090163804, 0.006986817280811514, 0.9285812871783302, 0.01696798482482796, 0.026283741199243316, 0.020960451842434544, 0.9961267250765886, 0.0741278123436908, 0.03249438349312473, 0.8905491976084497, 0.0030463484524804437, 0.9883041498120967, 0.023437577161187308, 0.00878909143544524, 0.00878909143544524, 0.9521515721732343, 0.005859394290296827, 0.012682466322741958, 0.030800275355230472, 0.8877726425919371, 0.05435342709746554, 0.01449424722599081, 0.9972009568634356, 0.06782103152033765, 0.7681303345224758, 0.07467933807857403, 0.08077561057478416, 0.008382374682288923, 0.1358683014628105, 0.8096655607070959, 0.016701191716335398, 0.026694527743322972, 0.011088496139534157, 0.05484121072945468, 0.9075335840067822, 0.008845356569266884, 0.00530721394156013, 0.022997927080093895, 0.020666853262912985, 0.8998029959083654, 0.05087225418563197, 0.009538547659805994, 0.017487337376310988, 0.03043352597846355, 0.021979768762223677, 0.9197687851268984, 0.018598265875727726, 0.01014450865948785, 0.055600310469315586, 0.4737953849233427, 0.41709407820711, 0.05119632548164702, 0.0025689912428066607, 0.018574380647511674, 0.012018716889566376, 0.0032778318789726483, 0.10379800950080052, 0.8631623947961307, 0.9910372674969917, 0.04754080641249797, 0.003961733867708164, 0.9468543943822512, 0.001980866933854082, 0.019460568529601485, 0.003072721346779182, 0.860361977098171, 0.004096961795705576, 0.11164220893297694, 0.11928154837030495, 0.5556703088700201, 0.18053423537127236, 0.10052474469536755, 0.043961258613134505, 0.9939856273698306, 0.9911086804077318, 0.004129619501698882, 0.9872587911356109, 0.9909803886205122, 0.992292672903355, 0.0034370825770711844, 0.9795685344652876, 0.006874165154142369, 0.005155623865606777, 0.005155623865606777, 0.06460294149304266, 0.02247058834540614, 0.1837773118249288, 0.7154474824974848, 0.013642857209710871, 0.008168426788516816, 0.9883796414105347, 0.01734635163412227, 0.9583859277852556, 0.008673175817061136, 0.006504881862795853, 0.009757322794193779, 0.015089665839206061, 0.01559265470051293, 0.8807334961483271, 0.06765200184577384, 0.02137702660554192, 0.015727756483082993, 0.00699011399248133, 0.9646357309624235, 0.002621292747180499, 0.01135893523778216, 0.013971348837217871, 0.009605302325587286, 0.9648962790703592, 0.001746418604652234, 0.010478511627913403, 0.20632153915106985, 0.59158980949817, 0.1534091586742149, 0.031233002364810216, 0.017270013072306824, 0.908210652521182, 0.09040059735743247, 0.0018141469093544374, 0.9796393310513961, 0.005442440728063312, 0.005442440728063312, 0.005442440728063312, 0.003435369163415754, 0.9825155807369057, 0.0051530537451236315, 0.0051530537451236315, 0.0051530537451236315, 0.0033840300250845257, 0.9796766922619702, 0.005076045037626788, 0.005076045037626788, 0.005076045037626788, 0.9963945863377579, 0.9919523153179622, 0.9908508386501436, 0.003616243936679356, 0.003616243936679356, 0.9932740948730578, 0.9940155284288755, 0.07166431310059278, 0.8023108156319237, 0.0869032762311786, 0.027183015314017952, 0.011532188315037918, 0.017826322015073764, 0.3962973765463263, 0.20385546462782372, 0.2836915008471475, 0.09825068569364087, 0.10022624207820209, 0.37283425772157636, 0.25608771219705906, 0.17247380868186474, 0.09838553974435081, 0.0034391553506010527, 0.9801592749213, 0.005158733025901579, 0.005158733025901579, 0.006878310701202105, 0.6364243684181617, 0.07370541337047987, 0.04509828945956302, 0.19755743218480218, 0.0471176158532748, 0.9831194231543027, 0.9958699987041314, 0.9916102425596355, 0.37934520745336, 0.3370996837427382, 0.06506848058566446, 0.10126246270063104, 0.11728463949674682, 0.18022975013205775, 0.1888249096018429, 0.07493904662718943, 0.05667433275389595, 0.4990564467144013, 0.23673828887248313, 0.34178383121876965, 0.1687313314866894, 0.08508586045090984, 0.16759959694622992, 0.10859681108060257, 0.0069687793206803786, 0.05516950295538633, 0.0034843896603401893, 0.8258003495006249, 0.9928393433923154, 0.5096259422940866, 0.20071664130545186, 0.10154003659586748, 0.04761877578288958, 0.1404928954623856, 0.20979856093456756, 0.3294007055104733, 0.3433495765878839, 0.07172358709398288, 0.04561657838828872, 0.014529041824336156, 0.005448390684126059, 0.9661812813183543, 0.0018161302280420195, 0.011804846482273127, 0.9907726605444661, 0.010832073422163253, 0.017376451114720217, 0.8370033400584064, 0.003610691140721084, 0.13133889024372944, 0.753240095270744, 0.029958412880086407, 0.0770359188345079, 0.06918966784210433, 0.07025961115925027, 0.0025510629543773118, 0.0025510629543773118, 0.0051021259087546235, 0.9898124262983969, 0.9962080153903641, 0.9940217365778208, 0.9878741760657189, 0.7173203227446873, 0.021550395962286743, 0.1318678991025641, 0.08722779318068444, 0.041818030260151656, 0.0028855821357643666, 0.0028855821357643666, 0.9926402547029421, 0.16851964538005515, 0.054894023099047666, 0.4424892074731745, 0.13581682310828205, 0.19838599837315402, 0.9946069941297444, 0.0077101317374398785, 0.9903017182659343, 0.7359251006570502, 0.09974076455791522, 0.0999481258147924, 0.021565570715224913, 0.043131141430449826, 0.9047962591635792, 0.02493532997694903, 0.06946270493578659, 0.00504792342389121, 0.9944409145065684, 0.2175548189601982, 0.13204895283228757, 0.11764636899868558, 0.07155810073115927, 0.4611858949664968, 0.9979092769432378, 0.9910449837466019, 0.008660817585800517, 0.99503065553057, 0.18114626707922613, 0.2859075417561921, 0.09651235541106311, 0.11070049654841597, 0.3256673326178437, 0.5531657893146167, 0.059655134141772384, 0.18388411327421594, 0.12195880489449026, 0.08134791019332598, 0.003417753996342041, 0.9791865199519947, 0.005126630994513061, 0.006835507992684082, 0.005126630994513061, 0.0927835175029148, 0.07034851514513409, 0.11591417884853368, 0.12843604062962058, 0.5924405855176744, 0.13468524490091638, 0.16474891563772806, 0.09199483245464378, 0.5295214539110432, 0.07896724180202537, 0.985779326447028, 0.06414053208205789, 0.009162933154579698, 0.9254562486125495, 0.0022907332886449245, 0.9860882258643823, 0.9844828559027369, 0.005989180095447147, 0.03793147393783193, 0.9542760285412455, 0.6973703684886625, 0.11605413928372044, 0.09723454912960361, 0.06865665296964843, 0.020910655726796477, 0.4584054484209958, 0.24425484341238132, 0.15204160809983278, 0.06530187067887817, 0.07997388586051203, 0.09442118401518108, 0.3241268170449534, 0.31676542004138314, 0.08698467071565608, 0.17772515622905205, 0.4104904803192559, 0.41211790392300607, 0.09075598963580218, 0.04014311555917132, 0.04649006761379705, 0.7397826602613903, 0.15704226933023688, 0.013315304631491408, 0.06775140297788275, 0.021931089981279964, 0.49392148947191583, 0.3246268446705878, 0.06521931514321373, 0.07559929065192239, 0.040693178321751663, 0.0031495453312265086, 0.9054942827276212, 0.09133681460556875, 0.9866915633421155, 0.008469455479331464, 0.31824374269983946, 0.04219920262190627, 0.4341371625834162, 0.16591491372320222, 0.0393173058574834, 0.7763163187673742, 0.06087943390707069, 0.031682154380210256, 0.07723819335829037, 0.05383895515591285, 0.016359463841797185, 0.007270872818576527, 0.964299507563712, 0.0018177182046441318, 0.01090630922786479, 0.06615745741348748, 0.0501192859193087, 0.7345816672906678, 0.07033406457342987, 0.07885434317971235, 0.006136459210264145, 0.9879699328525273, 0.006136459210264145], \"Term\": [\"adani\", \"adopters\", \"agix\", \"agix\", \"agix\", \"aiart\", \"aiart\", \"aiart\", \"aiart\", \"aiart\", \"aiartcommunity\", \"aiartcommunity\", \"aiartcommunity\", \"aiartcommunity\", \"aiartcommunity\", \"aiartwork\", \"aiartwork\", \"aiartwork\", \"aiartwork\", \"aiartwork\", \"aicrypto\", \"aidemo\", \"aienabled\", \"aiispresent\", \"ailaunchpad\", \"ailaunchpad\", \"aipadtweet\", \"aiprojects\", \"aiprojects\", \"aiprojects\", \"aiprojects\", \"aiprojects\", \"aiprompts\", \"aiprompts\", \"airdrop\", \"airdrop\", \"airdrop\", \"airdrop\", \"airdrop\", \"aiwars\", \"albt\", \"albt\", \"albt\", \"altman\", \"altman\", \"altman\", \"altman\", \"altman\", \"amo\", \"amo\", \"amo\", \"amo\", \"amo\", \"amountvalue\", \"amountvalue\", \"amp\", \"amp\", \"amp\", \"amp\", \"amp\", \"amuse\", \"answer\", \"answer\", \"answer\", \"answer\", \"answer\", \"answers\", \"answers\", \"answers\", \"answers\", \"answers\", \"api\", \"api\", \"api\", \"api\", \"api\", \"apple\", \"apple\", \"apple\", \"apple\", \"apple\", \"apprenticebard\", \"apprenticebard\", \"apt\", \"apt\", \"apt\", \"apt\", \"apt\", \"art\", \"art\", \"art\", \"art\", \"art\", \"article\", \"article\", \"article\", \"article\", \"article\", \"artificial\", \"artificial\", \"artificial\", \"artificial\", \"artificial\", \"asked\", \"asked\", \"asked\", \"asked\", \"asked\", \"ate\", \"attributes\", \"aussieed\", \"baba\", \"badly\", \"baidu\", \"baidu\", \"baidu\", \"baidu\", \"baidu\", \"balloon\", \"balloon\", \"balloon\", \"balloon\", \"balloon\", \"balloons\", \"bard\", \"bard\", \"bard\", \"bard\", \"bard\", \"bardai\", \"bardai\", \"bardai\", \"bardai\", \"bardai\", \"bbai\", \"bbai\", \"bcb\", \"bcb\", \"bcb\", \"bigger\", \"bigger\", \"bigger\", \"bigger\", \"bigger\", \"bing\", \"bing\", \"bing\", \"bing\", \"bing\", \"bitcoin\", \"bitcoin\", \"bitcoin\", \"bitcoin\", \"bitcoin\", \"blockchain\", \"blockchain\", \"blockchain\", \"blockchain\", \"blockchain\", \"blurry\", \"blurry\", \"bnb\", \"bnb\", \"bnb\", \"bnb\", \"bnb\", \"bone\", \"bone\", \"bone\", \"bone\", \"bone\", \"bonk\", \"bonk\", \"bonk\", \"bonk\", \"bottomfishing\", \"bottomfishing\", \"bottomfishing\", \"bottomfishing\", \"bottomfishing\", \"bowl\", \"bowl\", \"btc\", \"btc\", \"btc\", \"btc\", \"btc\", \"business\", \"business\", \"business\", \"business\", \"business\", \"businessprompts\", \"buy\", \"buy\", \"buy\", \"buy\", \"buy\", \"buzzfeed\", \"buzzfeed\", \"buzzy\", \"cai\", \"cai\", \"cai\", \"cannabis\", \"captain\", \"cc\", \"cc\", \"cc\", \"cc\", \"cc\", \"ceo\", \"ceo\", \"ceo\", \"ceo\", \"ceo\", \"ces\", \"chaat\", \"chatbot\", \"chatbot\", \"chatbot\", \"chatbot\", \"chatbot\", \"chatbotai\", \"chatbotai\", \"chatbotai\", \"chatbots\", \"chatbots\", \"chatbots\", \"chatbots\", \"chatbots\", \"chatgpt\", \"chatgpt\", \"chatgpt\", \"chatgpt\", \"chatgpt\", \"chatgptedu\", \"chatgptgod\", \"chatgptgod\", \"chatgptprompts\", \"chatgptprompts\", \"chatgptprompts\", \"chatgptprompts\", \"chatgptprompts\", \"chatty\", \"check\", \"check\", \"check\", \"check\", \"check\", \"classifier\", \"classifier\", \"classifier\", \"code\", \"code\", \"code\", \"code\", \"code\", \"coding\", \"coding\", \"coding\", \"coding\", \"coding\", \"coin\", \"coin\", \"coin\", \"coin\", \"coin\", \"companylogoapi\", \"companylogoapi\", \"consent\", \"content\", \"content\", \"content\", \"content\", \"content\", \"contentcreators\", \"contentwriter\", \"contentwriter\", \"conversationedu\", \"converse\", \"correct\", \"correct\", \"correct\", \"correct\", \"correct\", \"create\", \"create\", \"create\", \"create\", \"create\", \"creativecontent\", \"creativeprompts\", \"creativeprompts\", \"crv\", \"crv\", \"crv\", \"crypto\", \"crypto\", \"crypto\", \"crypto\", \"crypto\", \"cryptocurrency\", \"cryptocurrency\", \"cryptocurrency\", \"cryptocurrency\", \"cryptocurrency\", \"cryptolaunchpad\", \"cryptolaunchpad\", \"cryptomarket\", \"cryptomarket\", \"cryptomarket\", \"cryptomarket\", \"cryptomarket\", \"cryptotalkies\", \"cryptotalkies\", \"cryptotalkies\", \"cryptotalkies\", \"cryptotalkies\", \"cuban\", \"cultuur\", \"cure\", \"curieuxexplorer\", \"curieuxexplorer\", \"curieuxexplorer\", \"curieuxexplorer\", \"curieuxexplorer\", \"cyberdefense\", \"cyberdefense\", \"cybersecurite\", \"cybersecurite\", \"cybersecurite\", \"cybersecurite\", \"damus\", \"damus\", \"damus\", \"damus\", \"data\", \"data\", \"data\", \"data\", \"data\", \"dataenrichment\", \"daysofcode\", \"daysofcode\", \"daysofcode\", \"daysofcode\", \"daysofcode\", \"daytrading\", \"daytrading\", \"daytrading\", \"daytrading\", \"daytrading\", \"debuts\", \"deepfakes\", \"deeplearning\", \"deeplearning\", \"deeplearning\", \"deeplearning\", \"deeplearning\", \"defi\", \"defi\", \"defi\", \"defi\", \"defi\", \"deleted\", \"dell\", \"deploying\", \"destination\", \"developers\", \"developers\", \"developers\", \"developers\", \"developers\", \"devil\", \"dhenschen\", \"digitalart\", \"digitalart\", \"digitalart\", \"digitalart\", \"digitalart\", \"digitalartist\", \"digitalartist\", \"digitalartist\", \"digitalartist\", \"digitalartist\", \"dis\", \"disclosetv\", \"doge\", \"doge\", \"doge\", \"doge\", \"doge\", \"domain\", \"domain\", \"domain\", \"domain\", \"domain\", \"domains\", \"domains\", \"domains\", \"domains\", \"domains\", \"dominate\", \"dominate\", \"dominate\", \"dominate\", \"dose\", \"edge\", \"edge\", \"edge\", \"edge\", \"edge\", \"education\", \"education\", \"education\", \"education\", \"education\", \"efipm\", \"efipm\", \"efipm\", \"elonmusk\", \"elonmusk\", \"elonmusk\", \"elonmusk\", \"elonmusk\", \"engine\", \"engine\", \"engine\", \"engine\", \"engine\", \"engines\", \"engines\", \"engines\", \"engines\", \"engines\", \"englishoer\", \"enilev\", \"enilev\", \"enilev\", \"enilev\", \"enilev\", \"enter\", \"enter\", \"enter\", \"enter\", \"enter\", \"episode\", \"episode\", \"episode\", \"episode\", \"episode\", \"equality\", \"eth\", \"eth\", \"eth\", \"eth\", \"eth\", \"fan\", \"fan\", \"fet\", \"fet\", \"fet\", \"fet\", \"fiat\", \"fintech\", \"fintech\", \"fintech\", \"fintech\", \"fintech\", \"floki\", \"floki\", \"floki\", \"floki\", \"flux\", \"flying\", \"flying\", \"fogoros\", \"fogoros\", \"fogoros\", \"fogoros\", \"fogoros\", \"fomo\", \"fomo\", \"fomo\", \"fomo\", \"fomo\", \"fortunemagazine\", \"fotografie\", \"frameworks\", \"free\", \"free\", \"free\", \"free\", \"free\", \"fronk\", \"fronk\", \"fronk\", \"frronconi\", \"frronconi\", \"frronconi\", \"frronconi\", \"frronconi\", \"ftm\", \"ftm\", \"future\", \"future\", \"future\", \"future\", \"future\", \"gala\", \"gala\", \"gathering\", \"generate\", \"generate\", \"generate\", \"generate\", \"generate\", \"generativeai\", \"generativeai\", \"generativeai\", \"generativeai\", \"generativeai\", \"gerd\", \"gitagpt\", \"give\", \"give\", \"give\", \"give\", \"give\", \"google\", \"google\", \"google\", \"google\", \"google\", \"googleai\", \"googleai\", \"googleai\", \"googleai\", \"googleai\", \"googlecloudtech\", \"googles\", \"googles\", \"googles\", \"googles\", \"googles\", \"gpt\", \"gpt\", \"gpt\", \"gpt\", \"gpt\", \"gptchat\", \"gptchat\", \"gptchat\", \"gptchatgpt\", \"great\", \"great\", \"great\", \"great\", \"great\", \"gtch\", \"hail\", \"hall\", \"haroldsinnott\", \"haroldsinnott\", \"haroldsinnott\", \"haroldsinnott\", \"heck\", \"hinduism\", \"hippy\", \"hippy\", \"hitler\", \"hourlyupdate\", \"hourlyupdate\", \"hourlyupdate\", \"hourlyupdate\", \"hourlyupdate\", \"human\", \"human\", \"human\", \"human\", \"human\", \"humanlike\", \"humanlike\", \"humanlike\", \"humanlike\", \"humanlike\", \"humanlikerobot\", \"humanlikerobot\", \"humanlikerobots\", \"humans\", \"humans\", \"humans\", \"humans\", \"humans\", \"hunter\", \"hunter\", \"hunter\", \"iamsrk\", \"ideaprompts\", \"ideaprompts\", \"ideological\", \"imaginary\", \"imagine\", \"imagine\", \"imagine\", \"imagine\", \"imagine\", \"imgnai\", \"imgnai\", \"imgnai\", \"imgnai\", \"incorporates\", \"information\", \"information\", \"information\", \"information\", \"information\", \"innovation\", \"innovation\", \"innovation\", \"innovation\", \"innovation\", \"instructgpt\", \"insurtech\", \"insurtech\", \"insurtech\", \"insurtech\", \"insurtech\", \"intelligence\", \"intelligence\", \"intelligence\", \"intelligence\", \"intelligence\", \"interesting\", \"interesting\", \"interesting\", \"interesting\", \"interesting\", \"interior\", \"invest\", \"invest\", \"invest\", \"invest\", \"invest\", \"investing\", \"investing\", \"investing\", \"investing\", \"investing\", \"investments\", \"investments\", \"investments\", \"investments\", \"investments\", \"investorideas\", \"investorideas\", \"isb\", \"isb\", \"isb\", \"isb\", \"isb\", \"islamabad\", \"islamabad\", \"islamabad\", \"islamabad\", \"islamabad\", \"iwork\", \"january\", \"january\", \"january\", \"january\", \"javascript\", \"javascript\", \"javascript\", \"javascript\", \"javascript\", \"jblefevre\", \"jblefevre\", \"jblefevre\", \"jblefevre\", \"jblefevre\", \"join\", \"join\", \"join\", \"join\", \"join\", \"jordanbpeterson\", \"jordanbpeterson\", \"jordanbpeterson\", \"jordanbpeterson\", \"jordanbpeterson\", \"jpmorgan\", \"jumps\", \"kalydeoo\", \"kalydeoo\", \"kalydeoo\", \"kalydeoo\", \"karachi\", \"karachi\", \"karachi\", \"karachi\", \"kaspersky\", \"kaspersky\", \"kaspersky\", \"khi\", \"khi\", \"khi\", \"khi\", \"khuloodalmani\", \"khuloodalmani\", \"khuloodalmani\", \"khuloodalmani\", \"khuloodalmani\", \"kunst\", \"lamda\", \"lamda\", \"lamda\", \"lamda\", \"lamda\", \"language\", \"language\", \"language\", \"language\", \"language\", \"large\", \"large\", \"large\", \"large\", \"large\", \"latest\", \"latest\", \"latest\", \"latest\", \"latest\", \"launchpad\", \"launchpad\", \"launchpad\", \"launchpad\", \"learn\", \"learn\", \"learn\", \"learn\", \"learn\", \"leonhard\", \"liberal\", \"liberal\", \"liberal\", \"liberal\", \"life\", \"life\", \"life\", \"life\", \"life\", \"longest\", \"love\", \"love\", \"love\", \"love\", \"love\", \"loveisland\", \"luna\", \"luna\", \"luna\", \"machinelearning\", \"machinelearning\", \"machinelearning\", \"machinelearning\", \"machinelearning\", \"make\", \"make\", \"make\", \"make\", \"make\", \"maki\", \"maki\", \"maki\", \"mania\", \"manipulated\", \"marketing\", \"marketing\", \"marketing\", \"marketing\", \"marketing\", \"martech\", \"masks\", \"masterplan\", \"matches\", \"matches\", \"mattgsouthern\", \"media\", \"media\", \"media\", \"media\", \"media\", \"metaverse\", \"metaverse\", \"metaverse\", \"metaverse\", \"metaverse\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"midjourney\", \"midjourney\", \"midjourney\", \"midjourney\", \"midjourney\", \"mieexpert\", \"min\", \"min\", \"min\", \"min\", \"min\", \"mindbreeze\", \"mindbreeze\", \"mlart\", \"mlart\", \"mlsogood\", \"mlsogood\", \"mmo\", \"model\", \"model\", \"model\", \"model\", \"model\", \"models\", \"models\", \"models\", \"models\", \"models\", \"motherboard\", \"multibillion\", \"mvollmer\", \"mvollmer\", \"mvollmer\", \"mvollmer\", \"mvollmer\", \"nan\", \"nan\", \"nan\", \"nan\", \"nan\", \"nana\", \"natural\", \"natural\", \"natural\", \"natural\", \"natural\", \"neuroniai\", \"neuroniai\", \"neuroniai\", \"news\", \"news\", \"news\", \"news\", \"news\", \"nexttopwriter\", \"nft\", \"nft\", \"nft\", \"nft\", \"nft\", \"nftcommunity\", \"nftcommunity\", \"nftcommunity\", \"nftcommunity\", \"nftcommunity\", \"nftgiveaway\", \"nicochan\", \"nicochan\", \"nicochan\", \"nicochan\", \"nicochan\", \"nifty\", \"nightmare\", \"nightmare\", \"nightmare\", \"nightmare\", \"nocode\", \"nocode\", \"nocode\", \"nocode\", \"nocode\", \"nostr\", \"nostr\", \"nostr\", \"noting\", \"nyse\", \"obscure\", \"ocean\", \"ocean\", \"ocean\", \"ocean\", \"open\", \"open\", \"open\", \"open\", \"open\", \"openai\", \"openai\", \"openai\", \"openai\", \"openai\", \"openaichatgpt\", \"openaichatgpt\", \"openaichatgpt\", \"openaichatgpt\", \"openaichatgpt\", \"opensea\", \"opensea\", \"opensea\", \"opensea\", \"opensea\", \"opera\", \"opera\", \"opera\", \"options\", \"options\", \"options\", \"options\", \"options\", \"ordinary\", \"oriele\", \"oriele\", \"oriele\", \"oriele\", \"photoncommerce\", \"pichai\", \"pichai\", \"pictory\", \"pinetwork\", \"pltr\", \"pm\", \"pm\", \"pm\", \"pm\", \"pm\", \"podcast\", \"podcast\", \"podcast\", \"podcast\", \"podcast\", \"poet\", \"poet\", \"poet\", \"poet\", \"pokemon\", \"pokemon\", \"pokemon\", \"pokemon\", \"policies\", \"policies\", \"powerful\", \"powerful\", \"powerful\", \"powerful\", \"powerful\", \"praising\", \"precisely\", \"premiums\", \"processing\", \"processing\", \"processing\", \"processing\", \"processing\", \"programmed\", \"programmed\", \"programmed\", \"programmed\", \"programmed\", \"programming\", \"programming\", \"programming\", \"programming\", \"programming\", \"prompt\", \"prompt\", \"prompt\", \"prompt\", \"prompt\", \"prompts\", \"prompts\", \"prompts\", \"prompts\", \"prompts\", \"propaganda\", \"propaganda\", \"propaganda\", \"propaganda\", \"propaganda\", \"python\", \"python\", \"python\", \"python\", \"python\", \"quack\", \"quack\", \"quack\", \"question\", \"question\", \"question\", \"question\", \"question\", \"questions\", \"questions\", \"questions\", \"questions\", \"questions\", \"race\", \"race\", \"race\", \"race\", \"race\", \"racial\", \"reactions\", \"read\", \"read\", \"read\", \"read\", \"read\", \"ready\", \"ready\", \"ready\", \"ready\", \"ready\", \"real\", \"real\", \"real\", \"real\", \"real\", \"redditarmy\", \"redditarmy\", \"redditarmy\", \"redditarmy\", \"redditarmy\", \"regions\", \"relate\", \"relation\", \"responses\", \"responses\", \"responses\", \"responses\", \"responses\", \"rival\", \"rival\", \"rival\", \"rival\", \"rival\", \"rlc\", \"rndr\", \"rndr\", \"rndr\", \"rndr\", \"rytr\", \"sallyeaves\", \"sallyeaves\", \"sallyeaves\", \"sallyeaves\", \"sallyeaves\", \"sam\", \"sam\", \"sam\", \"sam\", \"sam\", \"savetime\", \"schools\", \"schools\", \"schools\", \"schools\", \"schools\", \"search\", \"search\", \"search\", \"search\", \"search\", \"searchengine\", \"searchengine\", \"searchengine\", \"searchengine\", \"searchengine\", \"sector\", \"sector\", \"sector\", \"sector\", \"sector\", \"sentiment\", \"sentiment\", \"sentiment\", \"sentiment\", \"sentiment\", \"seo\", \"seo\", \"seo\", \"seo\", \"seo\", \"shib\", \"shib\", \"shib\", \"shib\", \"shib\", \"shillinvillian\", \"sidehustles\", \"sidehustles\", \"sidehustles\", \"sidehustles\", \"signal\", \"signal\", \"signal\", \"signal\", \"signal\", \"social\", \"social\", \"social\", \"social\", \"social\", \"solopreneur\", \"soun\", \"soun\", \"southafrica\", \"specialists\", \"speechtotext\", \"speedkmhr\", \"speedkmhr\", \"speedkmhr\", \"speedkmhr\", \"speedkmhr\", \"stablediffusion\", \"stablediffusion\", \"stablediffusion\", \"stablediffusion\", \"stablediffusion\", \"stance\", \"stance\", \"status\", \"status\", \"status\", \"status\", \"status\", \"stocks\", \"stocks\", \"stocks\", \"stocks\", \"stocks\", \"stockstobuy\", \"stockstobuy\", \"stockstobuy\", \"stockstobuy\", \"stockstobuy\", \"stockstowatch\", \"stockstowatch\", \"stockstowatch\", \"stockstowatch\", \"stockstowatch\", \"students\", \"students\", \"students\", \"students\", \"students\", \"sundar\", \"sundar\", \"sunrise\", \"sunrise\", \"sunrise\", \"sunrise\", \"sunrise\", \"sunrisesunsetpm\", \"sunrisesunsetpm\", \"sunrisesunsetpm\", \"sunrisesunsetpm\", \"sunrisesunsetpm\", \"sunset\", \"sunset\", \"sunset\", \"sunset\", \"sunset\", \"superbowl\", \"svpino\", \"tcea\", \"tcea\", \"tcea\", \"tcs\", \"tea\", \"teachers\", \"teachers\", \"teachers\", \"teachers\", \"teachers\", \"tech\", \"tech\", \"tech\", \"tech\", \"tech\", \"technology\", \"technology\", \"technology\", \"technology\", \"technology\", \"tempupdate\", \"tempupdate\", \"tempupdate\", \"tempupdate\", \"tempupdate\", \"text\", \"text\", \"text\", \"text\", \"text\", \"textgenerating\", \"therabbithole\", \"thesaurustweet\", \"time\", \"time\", \"time\", \"time\", \"time\", \"times\", \"times\", \"times\", \"times\", \"times\", \"today\", \"today\", \"today\", \"today\", \"today\", \"token\", \"token\", \"token\", \"token\", \"token\", \"tongue\", \"tool\", \"tool\", \"tool\", \"tool\", \"tool\", \"tools\", \"tools\", \"tools\", \"tools\", \"tools\", \"tothemoon\", \"tothemoon\", \"tothemoon\", \"tothemoon\", \"tothemoon\", \"tourism\", \"trading\", \"trading\", \"trading\", \"trading\", \"trading\", \"trained\", \"trained\", \"trained\", \"trained\", \"trained\", \"tsuka\", \"tsuka\", \"tsuka\", \"tsuka\", \"tsunami\", \"turkish\", \"turkiye\", \"tweet\", \"tweet\", \"tweet\", \"tweet\", \"tweet\", \"twitfi\", \"twitfi\", \"twitfi\", \"twitter\", \"twitter\", \"twitter\", \"twitter\", \"twitter\", \"tyrant\", \"tyrant\", \"ubs\", \"understand\", \"understand\", \"understand\", \"understand\", \"understand\", \"upsc\", \"upsc\", \"upsc\", \"usdwhalealert\", \"usdwhalealert\", \"users\", \"users\", \"users\", \"users\", \"users\", \"valentine\", \"valentines\", \"valentines\", \"vcbuzz\", \"version\", \"version\", \"version\", \"version\", \"version\", \"video\", \"video\", \"video\", \"video\", \"video\", \"weatherupdate\", \"weatherupdate\", \"weatherupdate\", \"weatherupdate\", \"weatherupdate\", \"web\", \"web\", \"web\", \"web\", \"web\", \"week\", \"week\", \"week\", \"week\", \"week\", \"westworld\", \"wfh\", \"wfh\", \"wfh\", \"wfh\", \"wireless\", \"woah\", \"woof\", \"woof\", \"woof\", \"words\", \"words\", \"words\", \"words\", \"words\", \"work\", \"work\", \"work\", \"work\", \"work\", \"world\", \"world\", \"world\", \"world\", \"world\", \"write\", \"write\", \"write\", \"write\", \"write\", \"writers\", \"writers\", \"writers\", \"writers\", \"writers\", \"writing\", \"writing\", \"writing\", \"writing\", \"writing\", \"writingprompts\", \"writingprompts\", \"writingprompts\", \"writings\", \"writings\", \"written\", \"written\", \"written\", \"written\", \"written\", \"wrong\", \"wrong\", \"wrong\", \"wrong\", \"wrong\", \"yolo\", \"yolo\", \"yolo\", \"yolo\", \"yolo\", \"youtube\", \"youtube\", \"youtube\", \"youtube\", \"youtube\", \"yt\", \"yt\", \"yt\"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [4, 1, 3, 2, 5]};\n",
       "\n",
       "function LDAvis_load_lib(url, callback){\n",
       "  var s = document.createElement('script');\n",
       "  s.src = url;\n",
       "  s.async = true;\n",
       "  s.onreadystatechange = s.onload = callback;\n",
       "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
       "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "}\n",
       "\n",
       "if(typeof(LDAvis) !== \"undefined\"){\n",
       "   // already loaded: just create the visualization\n",
       "   !function(LDAvis){\n",
       "       new LDAvis(\"#\" + \"ldavis_el39331118097603247845772\", ldavis_el39331118097603247845772_data);\n",
       "   }(LDAvis);\n",
       "}else if(typeof define === \"function\" && define.amd){\n",
       "   // require.js is available: use it to load d3/LDAvis\n",
       "   require.config({paths: {d3: \"https://d3js.org/d3.v5\"}});\n",
       "   require([\"d3\"], function(d3){\n",
       "      window.d3 = d3;\n",
       "      LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.3.1/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
       "        new LDAvis(\"#\" + \"ldavis_el39331118097603247845772\", ldavis_el39331118097603247845772_data);\n",
       "      });\n",
       "    });\n",
       "}else{\n",
       "    // require.js not available: dynamically load d3 & LDAvis\n",
       "    LDAvis_load_lib(\"https://d3js.org/d3.v5.js\", function(){\n",
       "         LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.3.1/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
       "                 new LDAvis(\"#\" + \"ldavis_el39331118097603247845772\", ldavis_el39331118097603247845772_data);\n",
       "            })\n",
       "         });\n",
       "}\n",
       "</script>"
      ],
      "text/plain": [
       "PreparedData(topic_coordinates=              x         y  topics  cluster       Freq\n",
       "topic                                                \n",
       "3      0.079634  0.049891       1        1  29.152629\n",
       "0      0.084165  0.008261       2        1  23.903359\n",
       "2      0.024417 -0.012924       3        1  19.043763\n",
       "1     -0.049817 -0.119801       4        1  13.993622\n",
       "4     -0.138400  0.074573       5        1  13.906626, topic_info=           Term          Freq         Total Category  logprob  loglift\n",
       "372         gpt  44575.000000  44575.000000  Default  30.0000  30.0000\n",
       "448      google  37048.000000  37048.000000  Default  29.0000  29.0000\n",
       "159      openai  62704.000000  62704.000000  Default  28.0000  28.0000\n",
       "186      crypto   9646.000000   9646.000000  Default  27.0000  27.0000\n",
       "803      search  14609.000000  14609.000000  Default  26.0000  26.0000\n",
       "..          ...           ...           ...      ...      ...      ...\n",
       "138      future   2204.821187  16193.130887   Topic5  -5.7864  -0.0211\n",
       "608    powerful   1830.889540   4550.981660   Topic5  -5.9722   1.0623\n",
       "207  technology   2137.812281  21730.835706   Topic5  -5.8172  -0.3461\n",
       "115        time   2034.515178  17350.950719   Topic5  -5.8667  -0.1706\n",
       "171       asked   1851.404078  17602.476420   Topic5  -5.9611  -0.2793\n",
       "\n",
       "[502 rows x 6 columns], token_table=       Topic      Freq      Term\n",
       "term                            \n",
       "42600      5  0.994270     adani\n",
       "10149      1  0.989390  adopters\n",
       "3676       3  0.000466      agix\n",
       "3676       4  0.060617      agix\n",
       "3676       5  0.938634      agix\n",
       "...      ...       ...       ...\n",
       "1134       4  0.070334   youtube\n",
       "1134       5  0.078854   youtube\n",
       "30207      1  0.006136        yt\n",
       "30207      3  0.987970        yt\n",
       "30207      4  0.006136        yt\n",
       "\n",
       "[1395 rows x 3 columns], R=30, lambda_step=0.01, plot_opts={'xlab': 'PC1', 'ylab': 'PC2'}, topic_order=[4, 1, 3, 2, 5])"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Visualize the topics and evaluate the similarites of the topics. Adjust the number of topics of there are topics that are close to each other\n",
    "# you can adjust the lamba score in the interactive visualization to adjust the relevance metric. This helps in interprating the semantic of the topics\n",
    "pyLDAvis.enable_notebook()\n",
    "LDAvis_data_filepath = os.path.join('.'+str(num_topics))\n",
    "# # this is a bit time consuming - make the if statement True\n",
    "# # if you want to execute visualization prep yourself\n",
    "if 1 == 1:\n",
    "    LDAvis_prepared = gensimvis.prepare(lda_model, corpus, id2word)\n",
    "    with open(LDAvis_data_filepath, 'wb') as f:\n",
    "        pickle.dump(LDAvis_prepared, f)\n",
    "# load the pre-prepared pyLDAvis data from disk\n",
    "with open(LDAvis_data_filepath, 'rb') as f:\n",
    "    LDAvis_prepared = pickle.load(f)\n",
    "pyLDAvis.save_html(LDAvis_prepared, './'+ str(num_topics) +'.html')\n",
    "LDAvis_prepared\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "id": "86cc0631-f091-4c31-8c3c-15deadc0689d",
   "metadata": {},
   "outputs": [],
   "source": [
    "topics = lda_model.print_topics(num_words=20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "id": "c84fc375-50e5-4fb9-980b-4a00d4e7bd61",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<>:2: DeprecationWarning: invalid escape sequence '\\d'\n",
      "<>:5: DeprecationWarning: invalid escape sequence '\\d'\n",
      "<>:8: DeprecationWarning: invalid escape sequence '\\d'\n",
      "<>:11: DeprecationWarning: invalid escape sequence '\\d'\n",
      "<>:14: DeprecationWarning: invalid escape sequence '\\d'\n",
      "<>:2: DeprecationWarning: invalid escape sequence '\\d'\n",
      "<>:5: DeprecationWarning: invalid escape sequence '\\d'\n",
      "<>:8: DeprecationWarning: invalid escape sequence '\\d'\n",
      "<>:11: DeprecationWarning: invalid escape sequence '\\d'\n",
      "<>:14: DeprecationWarning: invalid escape sequence '\\d'\n",
      "/var/folders/ym/8kx0qq150538nzfzgpq76bfc0000gn/T/ipykernel_3933/2838849481.py:2: DeprecationWarning: invalid escape sequence '\\d'\n",
      "  weightsTopic1 = re.findall(\"\\d+\\.\\d+\", (topics[0])[1])\n",
      "/var/folders/ym/8kx0qq150538nzfzgpq76bfc0000gn/T/ipykernel_3933/2838849481.py:5: DeprecationWarning: invalid escape sequence '\\d'\n",
      "  weightsTopic2 = re.findall(\"\\d+\\.\\d+\", (topics[1])[1])\n",
      "/var/folders/ym/8kx0qq150538nzfzgpq76bfc0000gn/T/ipykernel_3933/2838849481.py:8: DeprecationWarning: invalid escape sequence '\\d'\n",
      "  weightsTopic3 = re.findall(\"\\d+\\.\\d+\", (topics[2])[1])\n",
      "/var/folders/ym/8kx0qq150538nzfzgpq76bfc0000gn/T/ipykernel_3933/2838849481.py:11: DeprecationWarning: invalid escape sequence '\\d'\n",
      "  weightsTopic4 = re.findall(\"\\d+\\.\\d+\", (topics[3])[1])\n",
      "/var/folders/ym/8kx0qq150538nzfzgpq76bfc0000gn/T/ipykernel_3933/2838849481.py:14: DeprecationWarning: invalid escape sequence '\\d'\n",
      "  weightsTopic5 = re.findall(\"\\d+\\.\\d+\", (topics[4])[1])\n"
     ]
    }
   ],
   "source": [
    "# transform the topic keywords and weight into a dataframe\n",
    "weightsTopic1 = re.findall(\"\\d+\\.\\d+\", (topics[0])[1])\n",
    "keywordsTopic1 = re.findall(r'\"(.*?)\"', (topics[0])[1])\n",
    "\n",
    "weightsTopic2 = re.findall(\"\\d+\\.\\d+\", (topics[1])[1])\n",
    "keywordsTopic2 = re.findall(r'\"(.*?)\"', (topics[1])[1])\n",
    "\n",
    "weightsTopic3 = re.findall(\"\\d+\\.\\d+\", (topics[2])[1])\n",
    "keywordsTopic3 = re.findall(r'\"(.*?)\"', (topics[2])[1])\n",
    "\n",
    "weightsTopic4 = re.findall(\"\\d+\\.\\d+\", (topics[3])[1])\n",
    "keywordsTopic4 = re.findall(r'\"(.*?)\"', (topics[3])[1])\n",
    "\n",
    "weightsTopic5 = re.findall(\"\\d+\\.\\d+\", (topics[4])[1])\n",
    "keywordsTopic5 = re.findall(r'\"(.*?)\"', (topics[4])[1])\n",
    "\n",
    "topicsAndKeywords = pd.DataFrame({'Topic 1 Weights':weightsTopic1, 'Topic 1 keywords':keywordsTopic1, 'Topic 2 Weights':weightsTopic2, 'Topic 2 keywords':keywordsTopic2, 'Topic 3 Weights':weightsTopic3, 'Topic 3 keywords':keywordsTopic3, 'Topic 4 Weights':weightsTopic4, 'Topic 4 keywords':keywordsTopic4, 'Topic 5 Weights':weightsTopic5, 'Topic 5 keywords':keywordsTopic5 })\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "id": "555bd224-0b0c-43c3-970e-08929f8d6768",
   "metadata": {},
   "outputs": [],
   "source": [
    "# save topics as csv file\n",
    "topicsAndKeywords.to_csv(\"./data/topics.csv\",sep ='\\t')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "id": "07f60b0c-0cef-493c-a46e-d7469e745453",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create TwitterTopics database\n",
    "mycursor.execute(\"DROP TABLE IF EXISTS TwitterTopics;\")\n",
    "mycursor.execute(\"CREATE TABLE TwitterTopics (Topic1Weights DOUBLE, Topic1Keywords VARCHAR(50),Topic2Weights DOUBLE, Topic2Keywords VARCHAR(50),Topic3Weights DOUBLE, Topic3Keywords VARCHAR(50),Topic4Weights DOUBLE, Topic4Keywords VARCHAR(50),Topic5Weights DOUBLE, Topic5Keywords VARCHAR(50))\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "id": "62856ac1-8249-4439-9182-49caf426fd10",
   "metadata": {},
   "outputs": [],
   "source": [
    "# insert topics into database\n",
    "sql = \"INSERT INTO TwitterTopics (Topic1Weights, Topic1Keywords,Topic2Weights,Topic2Keywords,Topic3Weights,Topic3Keywords,Topic4Weights,Topic4Keywords,Topic5Weights,Topic5Keywords) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s)\"\n",
    "\n",
    "for index, row in topicsAndKeywords.iterrows():\n",
    "    weightsTopic1 = row[\"Topic 1 Weights\"]\n",
    "    keywordsTopic1 = row[\"Topic 1 keywords\"]\n",
    "    weightsTopic2 = row[\"Topic 2 Weights\"]\n",
    "    keywordsTopic2 = row[\"Topic 2 keywords\"]\n",
    "    weightsTopic3 = row[\"Topic 3 Weights\"]\n",
    "    keywordsTopic3 = row[\"Topic 3 keywords\"]\n",
    "    weightsTopic4 = row[\"Topic 4 Weights\"]\n",
    "    keywordsTopic4 = row[\"Topic 4 keywords\"]\n",
    "    weightsTopic5 = row[\"Topic 5 Weights\"]\n",
    "    keywordsTopic5 = row[\"Topic 5 keywords\"]\n",
    "    \n",
    "    val = (weightsTopic1, keywordsTopic1,weightsTopic2,keywordsTopic2,weightsTopic3,keywordsTopic3,weightsTopic4,keywordsTopic4,weightsTopic5,keywordsTopic5)\n",
    "    mycursor.execute(sql, val)\n",
    "\n",
    "mydb.commit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "949adc2e-fb6b-4347-a6b7-b39c3743717f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
